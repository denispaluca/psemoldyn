Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 34.49      2.75     2.75 254294639     0.00     0.00  std::_Function_handler<void (Particle&, Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_invoke(std::_Any_data const&, Particle&, Particle&)
 32.79      5.36     2.61 254463167     0.00     0.00  calculateLennardJones(Particle&, Particle&, double, double)
  7.98      5.99     0.64     1000     0.00     0.01  LinkedCellContainer::iteratePairs(std::function<void (Particle&, Particle&)>)
  7.54      6.59     0.60 508926334     0.00     0.00  Particle::addF(std::array<double, 3ul> const&)
  2.89      6.82     0.23 545940362     0.00     0.00  Particle::getX()
  2.51      7.02     0.20    10000     0.00     0.00  Particle::updateDT(double)
  2.14      7.19     0.17 10010000     0.00     0.00  LinkedCellContainer::getIndexFromParticle(Particle&)
  1.76      7.33     0.14                             Particle::getOldF()
  1.07      7.42     0.09 10000000     0.00     0.00  std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_invoke(std::_Any_data const&, Particle&)
  1.01      7.50     0.08 27492600     0.00     0.00  LinkedCell::getIndex()
  0.88      7.57     0.07 10000000     0.00     0.00  Particle::calculateV()
  0.75      7.63     0.06 10000000     0.00     0.00  Particle::calculateX()
  0.63      7.68     0.05 10000000     0.00     0.00  Particle::applyGravity(double)
  0.50      7.72     0.04                             ParticleSphere::toString[abi:cxx11]()
  0.38      7.75     0.03 10000000     0.00     0.00  Particle::isOut(std::array<double, 3ul>)
  0.31      7.77     0.03 10000000     0.00     0.00  std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
  0.31      7.80     0.03    10000     0.00     0.00  std::_Function_handler<void (Particle&), LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
  0.25      7.82     0.02 10010000     0.00     0.00  LinkedCell::addParticle(Particle*)
  0.25      7.84     0.02  1800000     0.00     0.00  LinkedCell::getNeighbors()
  0.25      7.86     0.02  1800000     0.00     0.00  LinkedCell::iteratePairs(std::function<void (Particle&, Particle&)>)
  0.25      7.88     0.02   525099     0.00     0.00  std::_Function_handler<void (Particle&), BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
  0.13      7.89     0.01 47004081     0.00     0.00  LinkedCell::getParticles()
  0.13      7.90     0.01 10000000     0.00     0.00  std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}>::_M_invoke(std::_Any_data const&, Particle&)
  0.13      7.91     0.01   525099     0.00     0.00  Particle::setM(double)
  0.13      7.92     0.01    18000     0.00     0.00  std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&)
  0.13      7.93     0.01     3006     0.00     0.00  ParticleContainer::iterate(std::function<void (Particle&)>)
  0.13      7.94     0.01     1000     0.00     0.00  LinkedCellContainer::clearOutflowParticles()
  0.13      7.95     0.01                             Particle::operator==(Particle&)
  0.06      7.95     0.01                             LinkedCellContainer::assignParticle(Particle&)
  0.00      7.95     0.00 10000000     0.00     0.00  Particle::saveOldF()
  0.00      7.95     0.00  3602000     0.00     0.00  std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}> const&, std::_Manager_operation)
  0.00      7.95     0.00  1800000     0.00     0.00  LinkedCell::removeParticles()
  0.00      7.95     0.00  1575297     0.00     0.00  Particle::getF()
  0.00      7.95     0.00   545099     0.00     0.00  Particle::getM()
  0.00      7.95     0.00   525099     0.00     0.00  BoundaryHandler::prepareCounter(Particle&)
  0.00      7.95     0.00   236000     0.00     0.00  std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&)
  0.00      7.95     0.00   205790     0.00     0.00  std::_Function_handler<void (Particle&), BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
  0.00      7.95     0.00    30000     0.00     0.00  Particle::getV()
  0.00      7.95     0.00    20000     0.00     0.00  Particle::Particle(Particle const&)
  0.00      7.95     0.00    20000     0.00     0.00  std::pair<std::_Rb_tree_iterator<double>, bool> std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, std::allocator<double> >::_M_emplace_unique<double&>(double&)
  0.00      7.95     0.00    16006     0.00     0.00  boundary_type::_xsd_boundary_type_convert() const
  0.00      7.95     0.00    13696     0.00     0.00  LinkedCell::addNeighbor(LinkedCell*)
  0.00      7.95     0.00    11000     0.00     0.00  molsimInput::delta_t()
  0.00      7.95     0.00    10001     0.00     0.00  Particle::Particle(std::array<double, 3ul>, std::array<double, 3ul>, double, double, double)
  0.00      7.95     0.00    10000     0.00     0.00  MaxwellBoltzmannDistribution(Particle&, double, int)
  0.00      7.95     0.00    10000     0.00     0.00  ParticleContainer::push(Particle&)
  0.00      7.95     0.00    10000     0.00     0.00  std::_Function_handler<void (Particle&), Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
  0.00      7.95     0.00    10000     0.00     0.00  std::_Function_handler<void (Particle&), Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
  0.00      7.95     0.00    10000     0.00     0.00  std::_Function_handler<void (Particle&), Thermostat::scale(Container&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
  0.00      7.95     0.00    10000     0.00     0.00  std::_Function_handler<void (Particle&), LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
  0.00      7.95     0.00    10000     0.00     0.00  std::_Function_handler<void (Particle&), Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
  0.00      7.95     0.00     5000     0.00     0.00  BoundaryHandler::iterateCellsAtBoundary(Boundaries, std::function<void (LinkedCell&, std::array<int, 3ul>)> const&)
  0.00      7.95     0.00     4000     0.00     0.00  std::_Function_base::_Base_manager<BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00     3003     0.00     0.00  LinkedCellContainer::iterate(std::function<void (Particle&)>)
  0.00      7.95     0.00     3000     0.00     0.00  std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}> const&, std::_Manager_operation)
  0.00      7.95     0.00     3000     0.00     0.00  std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}> const&, std::_Manager_operation)
  0.00      7.95     0.00     3000     0.00     0.00  std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00     2000     0.00     0.00  BoundaryHandler::period(Boundaries)
  0.00      7.95     0.00     2000     0.00     0.00  BoundaryHandler::reflect(Boundaries)
  0.00      7.95     0.00     2000     0.00     0.00  boundaries_type::top()
  0.00      7.95     0.00     2000     0.00     0.00  boundaries_type::back()
  0.00      7.95     0.00     2000     0.00     0.00  boundaries_type::left()
  0.00      7.95     0.00     2000     0.00     0.00  boundaries_type::front()
  0.00      7.95     0.00     2000     0.00     0.00  boundaries_type::right()
  0.00      7.95     0.00     2000     0.00     0.00  boundaries_type::bottom()
  0.00      7.95     0.00     2000     0.00     0.00  std::_Function_base::_Base_manager<BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00     2000     0.00     0.00  std::_Function_base::_Base_manager<BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00     1800     0.00     0.00  LinkedCell::LinkedCell(int)
  0.00      7.95     0.00     1001     0.00     0.00  molsimInput::t_end()
  0.00      7.95     0.00     1000     0.00     0.00  BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)
  0.00      7.95     0.00     1000     0.00     0.00  BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*)
  0.00      7.95     0.00     1000     0.00     0.00  ParticleContainer::getParticles()
  0.00      7.95     0.00     1000     0.00     0.01  LinkedCellContainer::calculateIteration()
  0.00      7.95     0.00     1000     0.00     0.00  Thermostat::getSteps() const
  0.00      7.95     0.00     1000     0.00     0.00  std::_Function_base::_Base_manager<BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00      113     0.00     0.00  xsd::cxx::xml::char_utf8_transcoder<char>::to[abi:cxx11](char16_t const*, unsigned long)
  0.00      7.95     0.00       99     0.00     0.00  mapParticleToXML(Particle&)
  0.00      7.95     0.00       68     0.00     0.00  xsd::cxx::tree::_type::_container(xsd::cxx::tree::_type*)
  0.00      7.95     0.00       65     0.00     0.00  xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&)
  0.00      7.95     0.00       65     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::xml::transcode<char>(char16_t const*)
  0.00      7.95     0.00       64     0.00     0.00  xsd::cxx::xml::qualified_name<char>::~qualified_name()
  0.00      7.95     0.00       48     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::tree::text_content<char>(xercesc_3_2::DOMElement const&)
  0.00      7.95     0.00       44     0.00     0.00  xsd::cxx::tree::_type::_type(xsd::cxx::tree::_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00       41     0.00     0.00  xsd::cxx::ro_string<char>::size_type xsd::cxx::trim<char>(xsd::cxx::ro_string<char>&)
  0.00      7.95     0.00       29     0.00     0.00  xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00       29     0.00     0.00  xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xercesc_3_2::DOMElement const*, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00       24     0.00     0.00  xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00       18     0.00     0.00  boundary_type::~boundary_type()
  0.00      7.95     0.00       18     0.00     0.00  xsd::cxx::tree::one<boundary_type, false>::one(xsd::cxx::tree::one<boundary_type, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00       10     0.00     0.00  xsd::cxx::tree::_type::~_type()
  0.00      7.95     0.00        9     0.00     0.00  domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        9     0.00     0.00  xsd::cxx::tree::one<double_vector, false>::one(xsd::cxx::tree::one<double_vector, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        6     0.00     0.00  double_vector::~double_vector()
  0.00      7.95     0.00        6     0.00     0.00  xsd::cxx::tree::one<boundary_type, false>::set(std::unique_ptr<boundary_type, std::default_delete<boundary_type> >)
  0.00      7.95     0.00        5     0.00     0.00  double_vector::x()
  0.00      7.95     0.00        5     0.00     0.00  double_vector::y()
  0.00      7.95     0.00        5     0.00     0.00  double_vector::z()
  0.00      7.95     0.00        5     0.00     0.00  double_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        5     0.00     0.00  xsd::cxx::tree::one<double_vector, false>::set(std::unique_ptr<double_vector, std::default_delete<double_vector> >)
  0.00      7.95     0.00        5     0.00     0.00  xsd::cxx::tree::traits<boundary_type, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        5     0.00     0.00  xsd::cxx::tree::traits<double_vector, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        5     0.00     0.00  std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > >::_M_get_insert_unique_pos(std::pair<double, double> const&)
  0.00      7.95     0.00        4     0.00     0.00  input(xercesc_3_2::DOMDocument&, molsimInput const&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        4     0.00     0.00  cuboid::cuboid(cuboid const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        4     0.00     0.00  cuboid::~cuboid()
  0.00      7.95     0.00        4     0.00     0.00  std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > >::operator=(std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > > const&)
  0.00      7.95     0.00        3     0.00     0.00  boundaries_type::boundaries_type(boundaries_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        3     0.00     0.00  boundaries_type::~boundaries_type()
  0.00      7.95     0.00        3     0.00     0.00  ParticleContainer::size()
  0.00      7.95     0.00        3     0.00     0.00  ParticleContainer::ParticleContainer()
  0.00      7.95     0.00        3     0.00     0.00  LinkedCellContainer::size()
  0.00      7.95     0.00        3     0.00     0.00  xsd::cxx::tree::sequence_common::sequence_common(xsd::cxx::tree::sequence_common const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<Thermostat::scale(Container&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::scale(Container&)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00        3     0.00     0.00  std::_Function_base::_Base_manager<Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00        3     0.00     0.00  std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, std::allocator<double> >::_M_erase(std::_Rb_tree_node<double>*)
  0.00      7.95     0.00        2     0.00     0.00  mapCuboid(cuboid&)
  0.00      7.95     0.00        2     0.00     0.00  molsimInput::thermostat()
  0.00      7.95     0.00        2     0.00     0.00  molsimInput::particle_data()
  0.00      7.95     0.00        2     0.00     0.00  molsimInput::frequency_output()
  0.00      7.95     0.00        2     0.00     0.00  particle_data::cuboids()
  0.00      7.95     0.00        2     0.00     0.00  particle_data::spheres()
  0.00      7.95     0.00        2     0.00     0.00  particle_data::particles()
  0.00      7.95     0.00        2     0.00     0.00  particle_data::~particle_data()
  0.00      7.95     0.00        2     0.00     0.00  cuboid_cluster::cuboid()
  0.00      7.95     0.00        2     0.00     0.00  integer_vector::x()
  0.00      7.95     0.00        2     0.00     0.00  integer_vector::y()
  0.00      7.95     0.00        2     0.00     0.00  integer_vector::z()
  0.00      7.95     0.00        2     0.00     0.00  integer_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        2     0.00     0.00  sphere_cluster::sphere()
  0.00      7.95     0.00        2     0.00     0.00  particle_cluster::particle()
  0.00      7.95     0.00        2     0.00     0.00  ParticleContainer::~ParticleContainer()
  0.00      7.95     0.00        2     0.00     0.00  ParticleGenerator::getParticles()
  0.00      7.95     0.00        2     0.00     0.00  Cuboid::getNrParticles()
  0.00      7.95     0.00        2     0.00     0.00  Cuboid::generate(ParticleContainer&)
  0.00      7.95     0.00        2     0.00     0.00  Cuboid::Cuboid(std::array<double, 3ul>, std::array<int, 3ul>, double, double, std::array<double, 3ul>, double, double)
  0.00      7.95     0.00        2     0.00     0.00  cuboid::mass()
  0.00      7.95     0.00        2     0.00     0.00  cuboid::size()
  0.00      7.95     0.00        2     0.00     0.00  cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        2     0.00     0.00  cuboid::sigma()
  0.00      7.95     0.00        2     0.00     0.00  cuboid::epsilon()
  0.00      7.95     0.00        2     0.00     0.00  cuboid::distance()
  0.00      7.95     0.00        2     0.00     0.00  cuboid::position()
  0.00      7.95     0.00        2     0.00     0.00  cuboid::velocity()
  0.00      7.95     0.00        2     0.00     0.00  cuboid::cuboid(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        2     0.00     0.00  cuboid::~cuboid()
  0.00      7.95     0.00        2     0.00     0.00  cuboid::_clone(xsd::cxx::tree::flags, xsd::cxx::tree::_type*) const
  0.00      7.95     0.00        2     0.00     0.00  std::vector<Particle, std::allocator<Particle> >::operator=(std::vector<Particle, std::allocator<Particle> > const&)
  0.00      7.95     0.00        2     0.00     0.00  void std::vector<xsd::cxx::tree::sequence_common::ptr, std::allocator<xsd::cxx::tree::sequence_common::ptr> >::_M_realloc_insert<xsd::cxx::tree::sequence_common::ptr>(__gnu_cxx::__normal_iterator<xsd::cxx::tree::sequence_common::ptr*, std::vector<xsd::cxx::tree::sequence_common::ptr, std::allocator<xsd::cxx::tree::sequence_common::ptr> > >, xsd::cxx::tree::sequence_common::ptr&&)
  0.00      7.95     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN12outputWriter9VTKWriterC2Ev
  0.00      7.95     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN15DataArrayList_tC2Ev
  0.00      7.95     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN8ParticleC2ERKS_
  0.00      7.95     0.00        1     0.00     0.00  _GLOBAL__sub_I_ptStartTime
  0.00      7.95     0.00        1     0.00     0.00  mapDoubleVec(double_vector&)
  0.00      7.95     0.00        1     0.00     0.00  endPT(int, int)
  0.00      7.95     0.00        1     0.00     0.00  input(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&)
  0.00      7.95     0.00        1     0.00     0.00  input(std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> >, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&)
  0.00      7.95     0.00        1     0.00     0.00  Simulation::getNumParticles()
  0.00      7.95     0.00        1     0.00     7.75  Simulation::start(bool)
  0.00      7.95     0.00        1     0.00     0.00  Simulation::Simulation(molsimInput&)
  0.00      7.95     0.00        1     0.00     0.00  Thermostat::applyBrownian(ParticleContainer&)
  0.00      7.95     0.00        1     0.00     0.00  Thermostat::scale(Container&)
  0.00      7.95     0.00        1     0.00     0.00  Thermostat::Thermostat(thermostat_type, bool)
  0.00      7.95     0.00        1     0.00     0.00  domain_type::domain_size()
  0.00      7.95     0.00        1     0.00     0.00  domain_type::cutoff_radius()
  0.00      7.95     0.00        1     0.00     0.00  domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        1     0.00     0.00  domain_type::gravity()
  0.00      7.95     0.00        1     0.00     0.00  domain_type::boundary()
  0.00      7.95     0.00        1     0.00     0.00  domain_type::domain_type(domain_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        1     0.00     0.00  domain_type::~domain_type()
  0.00      7.95     0.00        1     0.00     0.00  molsimInput::checkpoint()
  0.00      7.95     0.00        1     0.00     0.00  molsimInput::linked_cell()
  0.00      7.95     0.00        1     0.00     0.00  molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        1     0.00     0.00  molsimInput::domain()
  0.00      7.95     0.00        1     0.00     0.00  molsimInput::molsimInput(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        1     0.00     0.00  molsimInput::~molsimInput()
  0.00      7.95     0.00        1     0.00     0.00  molsimInput::~molsimInput()
  0.00      7.95     0.00        1     0.00     0.00  particle_data::is3D()
  0.00      7.95     0.00        1     0.00     0.00  particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        1     0.00     0.00  particle_data::particle_data(particle_data const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        1     0.00     0.00  particle_data::particle_data(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        1     0.00     0.00  cuboid_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        1     0.00     0.00  cuboid_cluster::cuboid_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        1     0.00     0.00  sphere_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        1     0.00     0.00  BoundaryHandler::BoundaryHandler(boundaries_type, std::array<double, 3ul>, std::array<int, 3ul>)
  0.00      7.95     0.00        1     0.00     0.00  boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        1     0.00     0.00  boundaries_type::boundaries_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        1     0.00     0.00  thermostat_type::temp_delta()
  0.00      7.95     0.00        1     0.00     0.00  thermostat_type::change_brownian()
  0.00      7.95     0.00        1     0.00     0.00  thermostat_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        1     0.00     0.00  thermostat_type::steps()
  0.00      7.95     0.00        1     0.00     0.00  thermostat_type::t_init()
  0.00      7.95     0.00        1     0.00     0.00  thermostat_type::t_target()
  0.00      7.95     0.00        1     0.00     0.00  thermostat_type::thermostat_type(thermostat_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        1     0.00     0.00  thermostat_type::~thermostat_type()
  0.00      7.95     0.00        1     0.00     0.00  particle_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
  0.00      7.95     0.00        1     0.00     0.00  particle_cluster::particle_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        1     0.00     0.00  ParticleContainer::reserve(unsigned long)
  0.00      7.95     0.00        1     0.00     0.00  ParticleGenerator::applyBrownianMotion()
  0.00      7.95     0.00        1     0.00     0.00  ParticleGenerator::reserve()
  0.00      7.95     0.00        1     0.00     0.00  ParticleGenerator::generate()
  0.00      7.95     0.00        1     0.00     0.00  ParticleGenerator::ParticleGenerator(particle_data&, Thermostat*)
  0.00      7.95     0.00        1     0.00     0.00  LinkedCellContainer::mixParameters()
  0.00      7.95     0.00        1     0.00     0.00  LinkedCellContainer::populateNeighbours()
  0.00      7.95     0.00        1     0.00     0.00  LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)
  0.00      7.95     0.00        1     0.00     0.00  xsd::cxx::xml::char_utf8_transcoder<char>::from(char const*, unsigned long)
  0.00      7.95     0.00        1     0.00     0.00  std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> > xsd::cxx::xml::dom::parse<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xercesc_3_2::DOMErrorHandler&, xsd::cxx::xml::properties<char> const&, unsigned long)
  0.00      7.95     0.00        1     0.00     0.00  xsd::cxx::tree::one<domain_type, false>::set(std::unique_ptr<domain_type, std::default_delete<domain_type> >)
  0.00      7.95     0.00        1     0.00     0.00  xsd::cxx::tree::one<cuboid_cluster, false>::set(std::unique_ptr<cuboid_cluster, std::default_delete<cuboid_cluster> >)
  0.00      7.95     0.00        1     0.00     0.00  xsd::cxx::tree::one<sphere_cluster, false>::set(std::unique_ptr<sphere_cluster, std::default_delete<sphere_cluster> >)
  0.00      7.95     0.00        1     0.00     0.00  xsd::cxx::tree::one<particle_cluster, false>::set(std::unique_ptr<particle_cluster, std::default_delete<particle_cluster> >)
  0.00      7.95     0.00        1     0.00     0.00  xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::string(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  0.00      7.95     0.00        1     0.00     0.00  xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::~string()
  0.00      7.95     0.00        1     0.00     0.00  Thermostat::changeBrownian() const
  0.00      7.95     0.00        1     0.00     0.00  Thermostat::getCurrentTemp(Container&) const
  0.00      7.95     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00        1     0.00     0.00  std::_Function_base::_Base_manager<LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
  0.00      7.95     0.00        1     0.00     0.00  std::vector<LinkedCell, std::allocator<LinkedCell> >::reserve(unsigned long)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.


Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.


		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.13% of 7.95 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     97.5    0.00    7.76                 xmlRoutine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) [1]
                0.00    7.75       1/1           Simulation::start(bool) [2]
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
                0.00    0.00       1/1           input(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&) [175]
                0.00    0.00       1/1           Simulation::getNumParticles() [177]
                0.00    0.00       1/1           endPT(int, int) [174]
                0.00    0.00       1/1           molsimInput::checkpoint() [186]
                0.00    0.00       1/1           molsimInput::~molsimInput() [191]
-----------------------------------------------
                0.00    7.75       1/1           xmlRoutine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) [1]
[2]     97.5    0.00    7.75       1         Simulation::start(bool) [2]
                0.00    7.75    1000/1000        LinkedCellContainer::calculateIteration() [3]
                0.00    0.00       1/1           Thermostat::scale(Container&) [42]
                0.00    0.00    1001/1001        molsimInput::t_end() [91]
                0.00    0.00    1000/11000       molsimInput::delta_t() [70]
                0.00    0.00    1000/1000        Thermostat::getSteps() const [93]
                0.00    0.00       2/2           molsimInput::frequency_output() [139]
-----------------------------------------------
                0.00    7.75    1000/1000        Simulation::start(bool) [2]
[3]     97.5    0.00    7.75    1000         LinkedCellContainer::calculateIteration() [3]
                0.64    6.25    1000/1000        LinkedCellContainer::iteratePairs(std::function<void (Particle&, Particle&)>) [4]
                0.00    0.74    3000/3003        LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
                0.00    0.05    1000/1000        BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
                0.01    0.03    1000/1000        LinkedCellContainer::clearOutflowParticles() [24]
                0.00    0.02    1000/2000        BoundaryHandler::period(Boundaries) [26]
                0.00    0.02    1000/1000        BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
                0.00    0.00 1800000/1800000     LinkedCell::removeParticles() [62]
                0.00    0.00    2000/3602000     std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}> const&, std::_Manager_operation) [61]
                0.00    0.00    1000/3000        std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}> const&, std::_Manager_operation) [81]
                0.00    0.00    1000/3000        std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}> const&, std::_Manager_operation) [79]
                0.00    0.00    1000/3000        std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}> const&, std::_Manager_operation) [80]
-----------------------------------------------
                0.64    6.25    1000/1000        LinkedCellContainer::calculateIteration() [3]
[4]     86.6    0.64    6.25    1000         LinkedCellContainer::iteratePairs(std::function<void (Particle&, Particle&)>) [4]
                2.45    3.05 226799154/254294639     std::_Function_handler<void (Particle&, Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_invoke(std::_Any_data const&, Particle&, Particle&) [5]
                0.02    0.62 1800000/1800000     LinkedCell::iteratePairs(std::function<void (Particle&, Particle&)>) [9]
                0.08    0.00 27392000/27492600     LinkedCell::getIndex() [18]
                0.02    0.00 1800000/1800000     LinkedCell::getNeighbors() [33]
                0.01    0.00 46413556/47004081     LinkedCell::getParticles() [36]
                0.00    0.00 3600000/3602000     std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}> const&, std::_Manager_operation) [61]
-----------------------------------------------
                0.02    0.02 1813822/254294639     std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [21]
                0.28    0.35 25681663/254294639     LinkedCell::iteratePairs(std::function<void (Particle&, Particle&)>) [9]
                2.45    3.05 226799154/254294639     LinkedCellContainer::iteratePairs(std::function<void (Particle&, Particle&)>) [4]
[5]     77.6    2.75    3.42 254294639         std::_Function_handler<void (Particle&, Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_invoke(std::_Any_data const&, Particle&, Particle&) [5]
                2.61    0.81 254294639/254463167     calculateLennardJones(Particle&, Particle&, double, double) [6]
-----------------------------------------------
                0.00    0.00  168528/254463167     std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [28]
                2.61    0.81 254294639/254463167     std::_Function_handler<void (Particle&, Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_invoke(std::_Any_data const&, Particle&, Particle&) [5]
[6]     43.1    2.61    0.81 254463167         calculateLennardJones(Particle&, Particle&, double, double) [6]
                0.60    0.00 508926334/508926334     Particle::addF(std::array<double, 3ul> const&) [10]
                0.21    0.00 508926334/545940362     Particle::getX() [12]
-----------------------------------------------
                0.00    0.00       1/3006        Simulation::Simulation(molsimInput&) [41]
                0.00    0.00       1/3006        Thermostat::applyBrownian(ParticleContainer&) [44]
                0.00    0.00       1/3006        LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
                0.01    0.73    3003/3006        LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
[7]      9.3    0.01    0.73    3006         ParticleContainer::iterate(std::function<void (Particle&)>) [7]
                0.09    0.20 10000000/10000000     std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_invoke(std::_Any_data const&, Particle&) [11]
                0.20    0.00   10000/10000       Particle::updateDT(double) [13]
                0.03    0.06 10000000/10000000     std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [17]
                0.07    0.00 10000000/10000000     Particle::calculateV() [19]
                0.05    0.00 10000000/10000000     Particle::applyGravity(double) [23]
                0.03    0.00   10000/10000       std::_Function_handler<void (Particle&), LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [31]
                0.01    0.00 10000000/10000000     std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}>::_M_invoke(std::_Any_data const&, Particle&) [37]
                0.00    0.00   10000/10000       std::_Function_handler<void (Particle&), LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [50]
                0.00    0.00   10000/10010000     LinkedCell::addParticle(Particle*) [32]
                0.00    0.00 10000000/10000000     Particle::saveOldF() [60]
                0.00    0.00   10000/10000       std::_Function_handler<void (Particle&), Thermostat::scale(Container&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [76]
                0.00    0.00   10000/10000       std::_Function_handler<void (Particle&), Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [77]
                0.00    0.00   10000/20000       std::pair<std::_Rb_tree_iterator<double>, bool> std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, std::allocator<double> >::_M_emplace_unique<double&>(double&) [67]
                0.00    0.00   10000/10000       std::_Function_handler<void (Particle&), Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [74]
                0.00    0.00   10000/10000       MaxwellBoltzmannDistribution(Particle&, double, int) [72]
                0.00    0.00   10000/10000       std::_Function_handler<void (Particle&), Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [75]
-----------------------------------------------
                0.00    0.00       1/3003        Thermostat::getCurrentTemp(Container&) const [49]
                0.00    0.00       1/3003        Thermostat::scale(Container&) [42]
                0.00    0.00       1/3003        LinkedCellContainer::mixParameters() [48]
                0.00    0.74    3000/3003        LinkedCellContainer::calculateIteration() [3]
[8]      9.3    0.00    0.74    3003         LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
                0.01    0.73    3003/3006        ParticleContainer::iterate(std::function<void (Particle&)>) [7]
                0.00    0.00    2000/3000        std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}> const&, std::_Manager_operation) [80]
                0.00    0.00    2000/3000        std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}> const&, std::_Manager_operation) [79]
                0.00    0.00    2000/3000        std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}> const&, std::_Manager_operation) [81]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<Thermostat::scale(Container&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::scale(Container&)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [132]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}> const&, std::_Manager_operation) [134]
                0.00    0.00       2/3           std::_Function_base::_Base_manager<LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}> const&, std::_Manager_operation) [133]
-----------------------------------------------
                0.02    0.62 1800000/1800000     LinkedCellContainer::iteratePairs(std::function<void (Particle&, Particle&)>) [4]
[9]      8.1    0.02    0.62 1800000         LinkedCell::iteratePairs(std::function<void (Particle&, Particle&)>) [9]
                0.28    0.35 25681663/254294639     std::_Function_handler<void (Particle&, Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_invoke(std::_Any_data const&, Particle&, Particle&) [5]
-----------------------------------------------
                0.60    0.00 508926334/508926334     calculateLennardJones(Particle&, Particle&, double, double) [6]
[10]     7.5    0.60    0.00 508926334         Particle::addF(std::array<double, 3ul> const&) [10]
-----------------------------------------------
                0.09    0.20 10000000/10000000     ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[11]     3.6    0.09    0.20 10000000         std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_invoke(std::_Any_data const&, Particle&) [11]
                0.17    0.01 10000000/10010000     LinkedCellContainer::getIndexFromParticle(Particle&) [14]
                0.02    0.00 10000000/10010000     LinkedCell::addParticle(Particle*) [32]
-----------------------------------------------
                0.00    0.00  205790/545940362     std::_Function_handler<void (Particle&), BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [52]
                0.00    0.00 1050198/545940362     std::_Function_handler<void (Particle&), BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [29]
                0.00    0.00 2100396/545940362     BoundaryHandler::prepareCounter(Particle&) [35]
                0.00    0.00 3627644/545940362     std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [21]
                0.01    0.00 30030000/545940362     LinkedCellContainer::getIndexFromParticle(Particle&) [14]
                0.21    0.00 508926334/545940362     calculateLennardJones(Particle&, Particle&, double, double) [6]
[12]     2.9    0.23    0.00 545940362         Particle::getX() [12]
-----------------------------------------------
                0.20    0.00   10000/10000       ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[13]     2.5    0.20    0.00   10000         Particle::updateDT(double) [13]
-----------------------------------------------
                0.00    0.00   10000/10010000     std::_Function_handler<void (Particle&), LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [50]
                0.17    0.01 10000000/10010000     std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_invoke(std::_Any_data const&, Particle&) [11]
[14]     2.3    0.17    0.01 10010000         LinkedCellContainer::getIndexFromParticle(Particle&) [14]
                0.01    0.00 30030000/545940362     Particle::getX() [12]
-----------------------------------------------
                                                 <spontaneous>
[15]     1.8    0.14    0.00                 Particle::getOldF() [15]
-----------------------------------------------
                0.00    0.02    1000/5000        BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
                0.00    0.04    2000/5000        BoundaryHandler::reflect(Boundaries) [27]
                0.00    0.04    2000/5000        BoundaryHandler::period(Boundaries) [26]
[16]     1.1    0.00    0.09    5000         BoundaryHandler::iterateCellsAtBoundary(Boundaries, std::function<void (LinkedCell&, std::array<int, 3ul>)> const&) [16]
                0.01    0.05   18000/18000       std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [21]
                0.00    0.03  236000/236000      std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [28]
-----------------------------------------------
                0.03    0.06 10000000/10000000     ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[17]     1.1    0.03    0.06 10000000         std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [17]
                0.06    0.00 10000000/10000000     Particle::calculateX() [20]
-----------------------------------------------
                0.00    0.00   48600/27492600     LinkedCellContainer::populateNeighbours() [51]
                0.00    0.00   52000/27492600     std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [21]
                0.08    0.00 27392000/27492600     LinkedCellContainer::iteratePairs(std::function<void (Particle&, Particle&)>) [4]
[18]     1.0    0.08    0.00 27492600         LinkedCell::getIndex() [18]
-----------------------------------------------
                0.07    0.00 10000000/10000000     ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[19]     0.9    0.07    0.00 10000000         Particle::calculateV() [19]
-----------------------------------------------
                0.06    0.00 10000000/10000000     std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [17]
[20]     0.8    0.06    0.00 10000000         Particle::calculateX() [20]
-----------------------------------------------
                0.01    0.05   18000/18000       BoundaryHandler::iterateCellsAtBoundary(Boundaries, std::function<void (LinkedCell&, std::array<int, 3ul>)> const&) [16]
[21]     0.7    0.01    0.05   18000         std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [21]
                0.02    0.02 1813822/254294639     std::_Function_handler<void (Particle&, Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_invoke(std::_Any_data const&, Particle&, Particle&) [5]
                0.00    0.00 3627644/545940362     Particle::getX() [12]
                0.00    0.00   52000/27492600     LinkedCell::getIndex() [18]
                0.00    0.00  354525/47004081     LinkedCell::getParticles() [36]
-----------------------------------------------
                0.00    0.05    1000/1000        LinkedCellContainer::calculateIteration() [3]
[22]     0.7    0.00    0.05    1000         BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
                0.00    0.04    2000/2000        BoundaryHandler::reflect(Boundaries) [27]
                0.00    0.02    1000/2000        BoundaryHandler::period(Boundaries) [26]
                0.00    0.00   10000/16006       boundary_type::_xsd_boundary_type_convert() const [68]
                0.00    0.00    1000/2000        boundaries_type::top() [82]
                0.00    0.00    1000/2000        boundaries_type::bottom() [87]
                0.00    0.00    1000/2000        boundaries_type::front() [85]
                0.00    0.00    1000/2000        boundaries_type::back() [83]
                0.00    0.00    1000/2000        boundaries_type::left() [84]
                0.00    0.00    1000/2000        boundaries_type::right() [86]
-----------------------------------------------
                0.05    0.00 10000000/10000000     ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[23]     0.6    0.05    0.00 10000000         Particle::applyGravity(double) [23]
-----------------------------------------------
                0.01    0.03    1000/1000        LinkedCellContainer::calculateIteration() [3]
[24]     0.5    0.01    0.03    1000         LinkedCellContainer::clearOutflowParticles() [24]
                0.03    0.00 10000000/10000000     Particle::isOut(std::array<double, 3ul>) [30]
                0.00    0.00    1000/1000        ParticleContainer::getParticles() [92]
-----------------------------------------------
                                                 <spontaneous>
[25]     0.5    0.04    0.00                 ParticleSphere::toString[abi:cxx11]() [25]
-----------------------------------------------
                0.00    0.02    1000/2000        LinkedCellContainer::calculateIteration() [3]
                0.00    0.02    1000/2000        BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
[26]     0.5    0.00    0.04    2000         BoundaryHandler::period(Boundaries) [26]
                0.00    0.04    2000/5000        BoundaryHandler::iterateCellsAtBoundary(Boundaries, std::function<void (LinkedCell&, std::array<int, 3ul>)> const&) [16]
                0.00    0.00    2000/4000        std::_Function_base::_Base_manager<BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}> const&, std::_Manager_operation) [78]
                0.00    0.00    2000/2000        std::_Function_base::_Base_manager<BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [88]
-----------------------------------------------
                0.00    0.04    2000/2000        BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
[27]     0.5    0.00    0.04    2000         BoundaryHandler::reflect(Boundaries) [27]
                0.00    0.04    2000/5000        BoundaryHandler::iterateCellsAtBoundary(Boundaries, std::function<void (LinkedCell&, std::array<int, 3ul>)> const&) [16]
                0.00    0.00    2000/4000        std::_Function_base::_Base_manager<BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}> const&, std::_Manager_operation) [78]
                0.00    0.00    2000/2000        std::_Function_base::_Base_manager<BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [89]
-----------------------------------------------
                0.00    0.03  236000/236000      BoundaryHandler::iterateCellsAtBoundary(Boundaries, std::function<void (LinkedCell&, std::array<int, 3ul>)> const&) [16]
[28]     0.4    0.00    0.03  236000         std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [28]
                0.02    0.01  525099/525099      std::_Function_handler<void (Particle&), BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [29]
                0.00    0.00  168528/254463167     calculateLennardJones(Particle&, Particle&, double, double) [6]
                0.00    0.00  205790/205790      std::_Function_handler<void (Particle&), BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [52]
                0.00    0.00  236000/47004081     LinkedCell::getParticles() [36]
-----------------------------------------------
                0.02    0.01  525099/525099      std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [28]
[29]     0.4    0.02    0.01  525099         std::_Function_handler<void (Particle&), BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [29]
                0.00    0.01  525099/525099      BoundaryHandler::prepareCounter(Particle&) [35]
                0.00    0.00 1050198/545940362     Particle::getX() [12]
-----------------------------------------------
                0.03    0.00 10000000/10000000     LinkedCellContainer::clearOutflowParticles() [24]
[30]     0.4    0.03    0.00 10000000         Particle::isOut(std::array<double, 3ul>) [30]
-----------------------------------------------
                0.03    0.00   10000/10000       ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[31]     0.3    0.03    0.00   10000         std::_Function_handler<void (Particle&), LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [31]
                0.00    0.00   10000/20000       std::pair<std::_Rb_tree_iterator<double>, bool> std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, std::allocator<double> >::_M_emplace_unique<double&>(double&) [67]
-----------------------------------------------
                0.00    0.00   10000/10010000     ParticleContainer::iterate(std::function<void (Particle&)>) [7]
                0.02    0.00 10000000/10010000     std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_invoke(std::_Any_data const&, Particle&) [11]
[32]     0.3    0.02    0.00 10010000         LinkedCell::addParticle(Particle*) [32]
-----------------------------------------------
                0.02    0.00 1800000/1800000     LinkedCellContainer::iteratePairs(std::function<void (Particle&, Particle&)>) [4]
[33]     0.3    0.02    0.00 1800000         LinkedCell::getNeighbors() [33]
-----------------------------------------------
                0.00    0.02    1000/1000        LinkedCellContainer::calculateIteration() [3]
[34]     0.2    0.00    0.02    1000         BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
                0.00    0.02    1000/5000        BoundaryHandler::iterateCellsAtBoundary(Boundaries, std::function<void (LinkedCell&, std::array<int, 3ul>)> const&) [16]
                0.00    0.00    6000/16006       boundary_type::_xsd_boundary_type_convert() const [68]
                0.00    0.00    1000/2000        boundaries_type::front() [85]
                0.00    0.00    1000/2000        boundaries_type::back() [83]
                0.00    0.00    1000/2000        boundaries_type::left() [84]
                0.00    0.00    1000/2000        boundaries_type::right() [86]
                0.00    0.00    1000/2000        boundaries_type::top() [82]
                0.00    0.00    1000/2000        boundaries_type::bottom() [87]
                0.00    0.00    1000/1000        std::_Function_base::_Base_manager<BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}> const&, std::_Manager_operation) [94]
-----------------------------------------------
                0.00    0.01  525099/525099      std::_Function_handler<void (Particle&), BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [29]
[35]     0.1    0.00    0.01  525099         BoundaryHandler::prepareCounter(Particle&) [35]
                0.01    0.00  525099/525099      Particle::setM(double) [38]
                0.00    0.00 2100396/545940362     Particle::getX() [12]
                0.00    0.00 1575297/1575297     Particle::getF() [63]
                0.00    0.00  525099/545099      Particle::getM() [64]
-----------------------------------------------
                0.00    0.00  236000/47004081     std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [28]
                0.00    0.00  354525/47004081     std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [21]
                0.01    0.00 46413556/47004081     LinkedCellContainer::iteratePairs(std::function<void (Particle&, Particle&)>) [4]
[36]     0.1    0.01    0.00 47004081         LinkedCell::getParticles() [36]
-----------------------------------------------
                0.01    0.00 10000000/10000000     ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[37]     0.1    0.01    0.00 10000000         std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}>::_M_invoke(std::_Any_data const&, Particle&) [37]
-----------------------------------------------
                0.01    0.00  525099/525099      BoundaryHandler::prepareCounter(Particle&) [35]
[38]     0.1    0.01    0.00  525099         Particle::setM(double) [38]
-----------------------------------------------
                                                 <spontaneous>
[39]     0.1    0.01    0.00                 Particle::operator==(Particle&) [39]
-----------------------------------------------
                                                 <spontaneous>
[40]     0.1    0.01    0.00                 LinkedCellContainer::assignParticle(Particle&) [40]
-----------------------------------------------
                0.00    0.00       1/1           xmlRoutine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) [1]
[41]     0.0    0.00    0.00       1         Simulation::Simulation(molsimInput&) [41]
                0.00    0.00       1/1           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
                0.00    0.00       1/1           ParticleGenerator::ParticleGenerator(particle_data&, Thermostat*) [47]
                0.00    0.00       1/3006        ParticleContainer::iterate(std::function<void (Particle&)>) [7]
                0.00    0.00       1/1           LinkedCellContainer::mixParameters() [48]
                0.00    0.00       2/2           molsimInput::thermostat() [137]
                0.00    0.00       2/2           molsimInput::particle_data() [138]
                0.00    0.00       2/2           ParticleGenerator::getParticles() [152]
                0.00    0.00       1/1           thermostat_type::thermostat_type(thermostat_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [209]
                0.00    0.00       1/1           particle_data::is3D() [193]
                0.00    0.00       1/1           Thermostat::Thermostat(thermostat_type, bool) [178]
                0.00    0.00       1/1           thermostat_type::~thermostat_type() [210]
                0.00    0.00       1/1           molsimInput::linked_cell() [187]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [224]
                0.00    0.00       1/1           molsimInput::domain() [189]
                0.00    0.00       1/1           domain_type::domain_type(domain_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [184]
                0.00    0.00       1/1           domain_type::~domain_type() [185]
                0.00    0.00       1/2           particle_data::~particle_data() [143]
                0.00    0.00       1/2           ParticleContainer::~ParticleContainer() [151]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::start(bool) [2]
[42]     0.0    0.00    0.00       1         Thermostat::scale(Container&) [42]
                0.00    0.00       1/1           Thermostat::getCurrentTemp(Container&) const [49]
                0.00    0.00       1/3003        LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
                0.00    0.00       1/3           ParticleContainer::size() [128]
                0.00    0.00       1/3           LinkedCellContainer::size() [130]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<Thermostat::scale(Container&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::scale(Container&)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [132]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[43]     0.0    0.00    0.00       1         LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
                0.00    0.00       1/3006        ParticleContainer::iterate(std::function<void (Particle&)>) [7]
                0.00    0.00       1/1           LinkedCellContainer::populateNeighbours() [51]
                0.00    0.00    1800/1800        LinkedCell::LinkedCell(int) [90]
                0.00    0.00       2/4           std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > >::operator=(std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > > const&) [125]
                0.00    0.00       2/3           boundaries_type::boundaries_type(boundaries_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [126]
                0.00    0.00       1/1           domain_type::domain_size() [179]
                0.00    0.00       1/3           ParticleContainer::ParticleContainer() [129]
                0.00    0.00       1/1           mapDoubleVec(double_vector&) [173]
                0.00    0.00       1/1           domain_type::cutoff_radius() [180]
                0.00    0.00       1/1           domain_type::gravity() [182]
                0.00    0.00       1/2           std::vector<Particle, std::allocator<Particle> >::operator=(std::vector<Particle, std::allocator<Particle> > const&) [167]
                0.00    0.00       1/1           std::vector<LinkedCell, std::allocator<LinkedCell> >::reserve(unsigned long) [227]
                0.00    0.00       1/1           domain_type::boundary() [183]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [226]
                0.00    0.00       1/1           BoundaryHandler::BoundaryHandler(boundaries_type, std::array<double, 3ul>, std::array<int, 3ul>) [200]
                0.00    0.00       1/3           boundaries_type::~boundaries_type() [127]
-----------------------------------------------
                0.00    0.00       1/1           ParticleGenerator::applyBrownianMotion() [45]
[44]     0.0    0.00    0.00       1         Thermostat::applyBrownian(ParticleContainer&) [44]
                0.00    0.00       1/3006        ParticleContainer::iterate(std::function<void (Particle&)>) [7]
                0.00    0.00       1/1           std::_Function_base::_Base_manager<Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [225]
-----------------------------------------------
                0.00    0.00       1/1           ParticleGenerator::generate() [46]
[45]     0.0    0.00    0.00       1         ParticleGenerator::applyBrownianMotion() [45]
                0.00    0.00       1/1           Thermostat::applyBrownian(ParticleContainer&) [44]
                0.00    0.00       1/1           Thermostat::changeBrownian() const [223]
-----------------------------------------------
                0.00    0.00       1/1           ParticleGenerator::ParticleGenerator(particle_data&, Thermostat*) [47]
[46]     0.0    0.00    0.00       1         ParticleGenerator::generate() [46]
                0.00    0.00       1/1           ParticleGenerator::applyBrownianMotion() [45]
                0.00    0.00       2/2           Cuboid::generate(ParticleContainer&) [154]
                0.00    0.00       1/2           particle_data::particles() [142]
                0.00    0.00       1/1           ParticleGenerator::reserve() [214]
                0.00    0.00       1/2           particle_cluster::particle() [150]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[47]     0.0    0.00    0.00       1         ParticleGenerator::ParticleGenerator(particle_data&, Thermostat*) [47]
                0.00    0.00       1/1           ParticleGenerator::generate() [46]
                0.00    0.00       2/3           ParticleContainer::ParticleContainer() [129]
                0.00    0.00       2/4           std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > >::operator=(std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > > const&) [125]
                0.00    0.00       1/1           particle_data::particle_data(particle_data const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [195]
                0.00    0.00       1/2           std::vector<Particle, std::allocator<Particle> >::operator=(std::vector<Particle, std::allocator<Particle> > const&) [167]
                0.00    0.00       1/2           ParticleContainer::~ParticleContainer() [151]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[48]     0.0    0.00    0.00       1         LinkedCellContainer::mixParameters() [48]
                0.00    0.00       1/3003        LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
                0.00    0.00       5/5           std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > >::_M_get_insert_unique_pos(std::pair<double, double> const&) [121]
                0.00    0.00       3/3           std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, std::allocator<double> >::_M_erase(std::_Rb_tree_node<double>*) [135]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}> const&, std::_Manager_operation) [133]
-----------------------------------------------
                0.00    0.00       1/1           Thermostat::scale(Container&) [42]
[49]     0.0    0.00    0.00       1         Thermostat::getCurrentTemp(Container&) const [49]
                0.00    0.00       1/3003        LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
                0.00    0.00       1/3           ParticleContainer::size() [128]
                0.00    0.00       1/3           LinkedCellContainer::size() [130]
                0.00    0.00       1/3           std::_Function_base::_Base_manager<Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}> const&, std::_Manager_operation) [134]
-----------------------------------------------
                0.00    0.00   10000/10000       ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[50]     0.0    0.00    0.00   10000         std::_Function_handler<void (Particle&), LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [50]
                0.00    0.00   10000/10010000     LinkedCellContainer::getIndexFromParticle(Particle&) [14]
-----------------------------------------------
                0.00    0.00       1/1           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[51]     0.0    0.00    0.00       1         LinkedCellContainer::populateNeighbours() [51]
                0.00    0.00   48600/27492600     LinkedCell::getIndex() [18]
                0.00    0.00   13696/13696       LinkedCell::addNeighbor(LinkedCell*) [69]
-----------------------------------------------
                0.00    0.00  205790/205790      std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&) [28]
[52]     0.0    0.00    0.00  205790         std::_Function_handler<void (Particle&), BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [52]
                0.00    0.00  205790/545940362     Particle::getX() [12]
-----------------------------------------------
                0.00    0.00 10000000/10000000     ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[60]     0.0    0.00    0.00 10000000         Particle::saveOldF() [60]
-----------------------------------------------
                0.00    0.00    2000/3602000     LinkedCellContainer::calculateIteration() [3]
                0.00    0.00 3600000/3602000     LinkedCellContainer::iteratePairs(std::function<void (Particle&, Particle&)>) [4]
[61]     0.0    0.00    0.00 3602000         std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}> const&, std::_Manager_operation) [61]
-----------------------------------------------
                0.00    0.00 1800000/1800000     LinkedCellContainer::calculateIteration() [3]
[62]     0.0    0.00    0.00 1800000         LinkedCell::removeParticles() [62]
-----------------------------------------------
                0.00    0.00 1575297/1575297     BoundaryHandler::prepareCounter(Particle&) [35]
[63]     0.0    0.00    0.00 1575297         Particle::getF() [63]
-----------------------------------------------
                0.00    0.00   10000/545099      std::_Function_handler<void (Particle&), Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [75]
                0.00    0.00   10000/545099      std::_Function_handler<void (Particle&), Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [77]
                0.00    0.00  525099/545099      BoundaryHandler::prepareCounter(Particle&) [35]
[64]     0.0    0.00    0.00  545099         Particle::getM() [64]
-----------------------------------------------
                0.00    0.00   10000/30000       std::_Function_handler<void (Particle&), Thermostat::scale(Container&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [76]
                0.00    0.00   10000/30000       std::_Function_handler<void (Particle&), Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [77]
                0.00    0.00   10000/30000       MaxwellBoltzmannDistribution(Particle&, double, int) [72]
[65]     0.0    0.00    0.00   30000         Particle::getV() [65]
-----------------------------------------------
                0.00    0.00   10000/20000       std::vector<Particle, std::allocator<Particle> >::operator=(std::vector<Particle, std::allocator<Particle> > const&) [167]
                0.00    0.00   10000/20000       ParticleContainer::push(Particle&) [73]
[66]     0.0    0.00    0.00   20000         Particle::Particle(Particle const&) [66]
-----------------------------------------------
                0.00    0.00   10000/20000       std::_Function_handler<void (Particle&), LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [31]
                0.00    0.00   10000/20000       ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[67]     0.0    0.00    0.00   20000         std::pair<std::_Rb_tree_iterator<double>, bool> std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, std::allocator<double> >::_M_emplace_unique<double&>(double&) [67]
-----------------------------------------------
                0.00    0.00       1/16006       boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [201]
                0.00    0.00       5/16006       xsd::cxx::tree::traits<boundary_type, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [119]
                0.00    0.00    6000/16006       BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
                0.00    0.00   10000/16006       BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
[68]     0.0    0.00    0.00   16006         boundary_type::_xsd_boundary_type_convert() const [68]
-----------------------------------------------
                0.00    0.00   13696/13696       LinkedCellContainer::populateNeighbours() [51]
[69]     0.0    0.00    0.00   13696         LinkedCell::addNeighbor(LinkedCell*) [69]
-----------------------------------------------
                0.00    0.00    1000/11000       Simulation::start(bool) [2]
                0.00    0.00   10000/11000       std::_Function_handler<void (Particle&), Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [74]
[70]     0.0    0.00    0.00   11000         molsimInput::delta_t() [70]
-----------------------------------------------
                0.00    0.00       1/10001       BoundaryHandler::BoundaryHandler(boundaries_type, std::array<double, 3ul>, std::array<int, 3ul>) [200]
                0.00    0.00   10000/10001       Cuboid::generate(ParticleContainer&) [154]
[71]     0.0    0.00    0.00   10001         Particle::Particle(std::array<double, 3ul>, std::array<double, 3ul>, double, double, double) [71]
-----------------------------------------------
                0.00    0.00   10000/10000       ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[72]     0.0    0.00    0.00   10000         MaxwellBoltzmannDistribution(Particle&, double, int) [72]
                0.00    0.00   10000/30000       Particle::getV() [65]
-----------------------------------------------
                0.00    0.00   10000/10000       Cuboid::generate(ParticleContainer&) [154]
[73]     0.0    0.00    0.00   10000         ParticleContainer::push(Particle&) [73]
                0.00    0.00   10000/20000       Particle::Particle(Particle const&) [66]
-----------------------------------------------
                0.00    0.00   10000/10000       ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[74]     0.0    0.00    0.00   10000         std::_Function_handler<void (Particle&), Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [74]
                0.00    0.00   10000/11000       molsimInput::delta_t() [70]
-----------------------------------------------
                0.00    0.00   10000/10000       ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[75]     0.0    0.00    0.00   10000         std::_Function_handler<void (Particle&), Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [75]
                0.00    0.00   10000/545099      Particle::getM() [64]
-----------------------------------------------
                0.00    0.00   10000/10000       ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[76]     0.0    0.00    0.00   10000         std::_Function_handler<void (Particle&), Thermostat::scale(Container&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [76]
                0.00    0.00   10000/30000       Particle::getV() [65]
-----------------------------------------------
                0.00    0.00   10000/10000       ParticleContainer::iterate(std::function<void (Particle&)>) [7]
[77]     0.0    0.00    0.00   10000         std::_Function_handler<void (Particle&), Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&) [77]
                0.00    0.00   10000/30000       Particle::getV() [65]
                0.00    0.00   10000/545099      Particle::getM() [64]
-----------------------------------------------
                0.00    0.00    2000/4000        BoundaryHandler::reflect(Boundaries) [27]
                0.00    0.00    2000/4000        BoundaryHandler::period(Boundaries) [26]
[78]     0.0    0.00    0.00    4000         std::_Function_base::_Base_manager<BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}> const&, std::_Manager_operation) [78]
-----------------------------------------------
                0.00    0.00    1000/3000        LinkedCellContainer::calculateIteration() [3]
                0.00    0.00    2000/3000        LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
[79]     0.0    0.00    0.00    3000         std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}> const&, std::_Manager_operation) [79]
-----------------------------------------------
                0.00    0.00    1000/3000        LinkedCellContainer::calculateIteration() [3]
                0.00    0.00    2000/3000        LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
[80]     0.0    0.00    0.00    3000         std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}> const&, std::_Manager_operation) [80]
-----------------------------------------------
                0.00    0.00    1000/3000        LinkedCellContainer::calculateIteration() [3]
                0.00    0.00    2000/3000        LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
[81]     0.0    0.00    0.00    3000         std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}> const&, std::_Manager_operation) [81]
-----------------------------------------------
                0.00    0.00    1000/2000        BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
                0.00    0.00    1000/2000        BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
[82]     0.0    0.00    0.00    2000         boundaries_type::top() [82]
-----------------------------------------------
                0.00    0.00    1000/2000        BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
                0.00    0.00    1000/2000        BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
[83]     0.0    0.00    0.00    2000         boundaries_type::back() [83]
-----------------------------------------------
                0.00    0.00    1000/2000        BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
                0.00    0.00    1000/2000        BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
[84]     0.0    0.00    0.00    2000         boundaries_type::left() [84]
-----------------------------------------------
                0.00    0.00    1000/2000        BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
                0.00    0.00    1000/2000        BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
[85]     0.0    0.00    0.00    2000         boundaries_type::front() [85]
-----------------------------------------------
                0.00    0.00    1000/2000        BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
                0.00    0.00    1000/2000        BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
[86]     0.0    0.00    0.00    2000         boundaries_type::right() [86]
-----------------------------------------------
                0.00    0.00    1000/2000        BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [22]
                0.00    0.00    1000/2000        BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
[87]     0.0    0.00    0.00    2000         boundaries_type::bottom() [87]
-----------------------------------------------
                0.00    0.00    2000/2000        BoundaryHandler::period(Boundaries) [26]
[88]     0.0    0.00    0.00    2000         std::_Function_base::_Base_manager<BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [88]
-----------------------------------------------
                0.00    0.00    2000/2000        BoundaryHandler::reflect(Boundaries) [27]
[89]     0.0    0.00    0.00    2000         std::_Function_base::_Base_manager<BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [89]
-----------------------------------------------
                0.00    0.00    1800/1800        LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[90]     0.0    0.00    0.00    1800         LinkedCell::LinkedCell(int) [90]
-----------------------------------------------
                0.00    0.00    1001/1001        Simulation::start(bool) [2]
[91]     0.0    0.00    0.00    1001         molsimInput::t_end() [91]
-----------------------------------------------
                0.00    0.00    1000/1000        LinkedCellContainer::clearOutflowParticles() [24]
[92]     0.0    0.00    0.00    1000         ParticleContainer::getParticles() [92]
-----------------------------------------------
                0.00    0.00    1000/1000        Simulation::start(bool) [2]
[93]     0.0    0.00    0.00    1000         Thermostat::getSteps() const [93]
-----------------------------------------------
                0.00    0.00    1000/1000        BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [34]
[94]     0.0    0.00    0.00    1000         std::_Function_base::_Base_manager<BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}> const&, std::_Manager_operation) [94]
-----------------------------------------------
                0.00    0.00      48/113         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::tree::text_content<char>(xercesc_3_2::DOMElement const&) [101]
                0.00    0.00      65/113         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::xml::transcode<char>(char16_t const*) [99]
[95]     0.0    0.00    0.00     113         xsd::cxx::xml::char_utf8_transcoder<char>::to[abi:cxx11](char16_t const*, unsigned long) [95]
-----------------------------------------------
                0.00    0.00       1/99          boundaries_type::boundaries_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [202]
                0.00    0.00       1/99          domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
                0.00    0.00       1/99          cuboid_cluster::cuboid_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [198]
                0.00    0.00       1/99          particle_cluster::particle_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [212]
                0.00    0.00       1/99          particle_data::particle_data(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [196]
                0.00    0.00       1/99          molsimInput::molsimInput(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [190]
                0.00    0.00       2/99          cuboid::cuboid(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [164]
                0.00    0.00       2/99          cuboid_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [197]
                0.00    0.00       3/99          thermostat_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [205]
                0.00    0.00       4/99          domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [181]
                0.00    0.00       5/99          xsd::cxx::tree::traits<double_vector, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [120]
                0.00    0.00       6/99          boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [201]
                0.00    0.00       6/99          integer_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [148]
                0.00    0.00       6/99          particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
                0.00    0.00      10/99          molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
                0.00    0.00      15/99          double_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [117]
                0.00    0.00      16/99          cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [158]
                0.00    0.00      18/99          xsd::cxx::tree::one<boundary_type, false>::one(xsd::cxx::tree::one<boundary_type, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [108]
[96]     0.0    0.00    0.00      99         mapParticleToXML(Particle&) [96]
-----------------------------------------------
                0.00    0.00       3/68          xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::string(char const*) [588]
                0.00    0.00      65/68          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
[97]     0.0    0.00    0.00      68         xsd::cxx::tree::_type::_container(xsd::cxx::tree::_type*) [97]
-----------------------------------------------
                0.00    0.00       1/65          input(std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> >, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&) [176]
                0.00    0.00       2/65          cuboid_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [197]
                0.00    0.00       3/65          thermostat_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [205]
                0.00    0.00       4/65          domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [181]
                0.00    0.00       5/65          particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
                0.00    0.00       6/65          boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [201]
                0.00    0.00       6/65          integer_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [148]
                0.00    0.00       9/65          molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
                0.00    0.00      14/65          cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [158]
                0.00    0.00      15/65          double_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [117]
[98]     0.0    0.00    0.00      65         xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00      65/65          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::xml::transcode<char>(char16_t const*) [99]
                0.00    0.00      65/68          xsd::cxx::tree::_type::_container(xsd::cxx::tree::_type*) [97]
-----------------------------------------------
                0.00    0.00      65/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
[99]     0.0    0.00    0.00      65         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::xml::transcode<char>(char16_t const*) [99]
                0.00    0.00      65/113         xsd::cxx::xml::char_utf8_transcoder<char>::to[abi:cxx11](char16_t const*, unsigned long) [95]
-----------------------------------------------
                0.00    0.00       2/64          cuboid_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [197]
                0.00    0.00       3/64          thermostat_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [205]
                0.00    0.00       4/64          domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [181]
                0.00    0.00       5/64          particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
                0.00    0.00       6/64          boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [201]
                0.00    0.00       6/64          integer_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [148]
                0.00    0.00       9/64          molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
                0.00    0.00      14/64          cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [158]
                0.00    0.00      15/64          double_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [117]
[100]    0.0    0.00    0.00      64         xsd::cxx::xml::qualified_name<char>::~qualified_name() [100]
-----------------------------------------------
                0.00    0.00       1/48          boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [201]
                0.00    0.00       1/48          xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::string(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [221]
                0.00    0.00       4/48          input(xercesc_3_2::DOMDocument&, molsimInput const&, xsd::cxx::tree::flags) [122]
                0.00    0.00       5/48          xsd::cxx::tree::traits<boundary_type, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [119]
                0.00    0.00       8/48          domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
                0.00    0.00      29/48          xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [104]
[101]    0.0    0.00    0.00      48         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::tree::text_content<char>(xercesc_3_2::DOMElement const&) [101]
                0.00    0.00      48/113         xsd::cxx::xml::char_utf8_transcoder<char>::to[abi:cxx11](char16_t const*, unsigned long) [95]
-----------------------------------------------
                0.00    0.00       1/44          thermostat_type::thermostat_type(thermostat_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [209]
                0.00    0.00       1/44          domain_type::domain_type(domain_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [184]
                0.00    0.00       3/44          boundaries_type::boundaries_type(boundaries_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [126]
                0.00    0.00       4/44          particle_data::particle_data(particle_data const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [195]
                0.00    0.00       8/44          cuboid::cuboid(cuboid const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [123]
                0.00    0.00       9/44          xsd::cxx::tree::one<double_vector, false>::one(xsd::cxx::tree::one<double_vector, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [111]
                0.00    0.00      18/44          xsd::cxx::tree::one<boundary_type, false>::one(xsd::cxx::tree::one<boundary_type, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [108]
[102]    0.0    0.00    0.00      44         xsd::cxx::tree::_type::_type(xsd::cxx::tree::_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [102]
-----------------------------------------------
                0.00    0.00       4/41          input(xercesc_3_2::DOMDocument&, molsimInput const&, xsd::cxx::tree::flags) [122]
                0.00    0.00       8/41          domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
                0.00    0.00      29/41          xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xercesc_3_2::DOMElement const*, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [105]
[103]    0.0    0.00    0.00      41         xsd::cxx::ro_string<char>::size_type xsd::cxx::trim<char>(xsd::cxx::ro_string<char>&) [103]
-----------------------------------------------
                0.00    0.00       1/29          thermostat_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [205]
                0.00    0.00       1/29          particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
                0.00    0.00       2/29          domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [181]
                0.00    0.00       2/29          molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
                0.00    0.00       8/29          cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [158]
                0.00    0.00      15/29          double_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [117]
[104]    0.0    0.00    0.00      29         xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [104]
                0.00    0.00      29/48          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::tree::text_content<char>(xercesc_3_2::DOMElement const&) [101]
                0.00    0.00      29/29          xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xercesc_3_2::DOMElement const*, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [105]
-----------------------------------------------
                0.00    0.00      29/29          xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [104]
[105]    0.0    0.00    0.00      29         xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xercesc_3_2::DOMElement const*, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [105]
                0.00    0.00      29/41          xsd::cxx::ro_string<char>::size_type xsd::cxx::trim<char>(xsd::cxx::ro_string<char>&) [103]
-----------------------------------------------
                0.00    0.00       1/24          boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [201]
                0.00    0.00       1/24          boundaries_type::boundaries_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [202]
                0.00    0.00       1/24          domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
                0.00    0.00       1/24          cuboid_cluster::cuboid_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [198]
                0.00    0.00       1/24          particle_cluster::particle_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [212]
                0.00    0.00       1/24          particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
                0.00    0.00       1/24          particle_data::particle_data(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [196]
                0.00    0.00       1/24          molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
                0.00    0.00       1/24          molsimInput::molsimInput(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [190]
                0.00    0.00       1/24          xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::string(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [221]
                0.00    0.00       2/24          cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [158]
                0.00    0.00       2/24          cuboid::cuboid(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [164]
                0.00    0.00       5/24          xsd::cxx::tree::traits<boundary_type, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [119]
                0.00    0.00       5/24          xsd::cxx::tree::traits<double_vector, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [120]
[106]    0.0    0.00    0.00      24         xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
-----------------------------------------------
                0.00    0.00      18/18          boundaries_type::~boundaries_type() [127]
[107]    0.0    0.00    0.00      18         boundary_type::~boundary_type() [107]
-----------------------------------------------
                0.00    0.00      18/18          boundaries_type::boundaries_type(boundaries_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [126]
[108]    0.0    0.00    0.00      18         xsd::cxx::tree::one<boundary_type, false>::one(xsd::cxx::tree::one<boundary_type, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [108]
                0.00    0.00      18/44          xsd::cxx::tree::_type::_type(xsd::cxx::tree::_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [102]
                0.00    0.00      18/99          mapParticleToXML(Particle&) [96]
-----------------------------------------------
                0.00    0.00       2/10          cuboid::~cuboid() [165]
                0.00    0.00       2/10          molsimInput::~molsimInput() [192]
                0.00    0.00       6/10          particle_data::~particle_data() [143]
[109]    0.0    0.00    0.00      10         xsd::cxx::tree::_type::~_type() [109]
-----------------------------------------------
                                   8             domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
                0.00    0.00       1/9           thermostat_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [205]
                0.00    0.00       2/9           molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
                0.00    0.00       6/9           integer_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [148]
[110]    0.0    0.00    0.00       9+8       domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
                0.00    0.00       8/41          xsd::cxx::ro_string<char>::size_type xsd::cxx::trim<char>(xsd::cxx::ro_string<char>&) [103]
                0.00    0.00       8/48          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::tree::text_content<char>(xercesc_3_2::DOMElement const&) [101]
                0.00    0.00       1/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       1/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       1/1           domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [181]
                                   8             domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
-----------------------------------------------
                0.00    0.00       1/9           domain_type::domain_type(domain_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [184]
                0.00    0.00       8/9           cuboid::cuboid(cuboid const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [123]
[111]    0.0    0.00    0.00       9         xsd::cxx::tree::one<double_vector, false>::one(xsd::cxx::tree::one<double_vector, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [111]
                0.00    0.00       9/44          xsd::cxx::tree::_type::_type(xsd::cxx::tree::_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [102]
-----------------------------------------------
                0.00    0.00       1/6           domain_type::~domain_type() [185]
                0.00    0.00       1/6           molsimInput::~molsimInput() [192]
                0.00    0.00       4/6           cuboid::~cuboid() [165]
[112]    0.0    0.00    0.00       6         double_vector::~double_vector() [112]
-----------------------------------------------
                0.00    0.00       6/6           boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [201]
[113]    0.0    0.00    0.00       6         xsd::cxx::tree::one<boundary_type, false>::set(std::unique_ptr<boundary_type, std::default_delete<boundary_type> >) [113]
-----------------------------------------------
                0.00    0.00       1/5           mapDoubleVec(double_vector&) [173]
                0.00    0.00       4/5           mapCuboid(cuboid&) [136]
[114]    0.0    0.00    0.00       5         double_vector::x() [114]
-----------------------------------------------
                0.00    0.00       1/5           mapDoubleVec(double_vector&) [173]
                0.00    0.00       4/5           mapCuboid(cuboid&) [136]
[115]    0.0    0.00    0.00       5         double_vector::y() [115]
-----------------------------------------------
                0.00    0.00       1/5           mapDoubleVec(double_vector&) [173]
                0.00    0.00       4/5           mapCuboid(cuboid&) [136]
[116]    0.0    0.00    0.00       5         double_vector::z() [116]
-----------------------------------------------
                0.00    0.00       5/5           xsd::cxx::tree::traits<double_vector, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [120]
[117]    0.0    0.00    0.00       5         double_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [117]
                0.00    0.00      15/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00      15/29          xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [104]
                0.00    0.00      15/99          mapParticleToXML(Particle&) [96]
                0.00    0.00      15/64          xsd::cxx::xml::qualified_name<char>::~qualified_name() [100]
-----------------------------------------------
                0.00    0.00       1/5           domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [181]
                0.00    0.00       4/5           cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [158]
[118]    0.0    0.00    0.00       5         xsd::cxx::tree::one<double_vector, false>::set(std::unique_ptr<double_vector, std::default_delete<double_vector> >) [118]
-----------------------------------------------
                0.00    0.00       5/5           boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [201]
[119]    0.0    0.00    0.00       5         xsd::cxx::tree::traits<boundary_type, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [119]
                0.00    0.00       5/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       5/48          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::tree::text_content<char>(xercesc_3_2::DOMElement const&) [101]
                0.00    0.00       5/16006       boundary_type::_xsd_boundary_type_convert() const [68]
-----------------------------------------------
                0.00    0.00       1/5           domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [181]
                0.00    0.00       4/5           cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [158]
[120]    0.0    0.00    0.00       5         xsd::cxx::tree::traits<double_vector, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [120]
                0.00    0.00       5/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       5/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       5/5           double_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [117]
-----------------------------------------------
                0.00    0.00       5/5           LinkedCellContainer::mixParameters() [48]
[121]    0.0    0.00    0.00       5         std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > >::_M_get_insert_unique_pos(std::pair<double, double> const&) [121]
-----------------------------------------------
                0.00    0.00       1/4           thermostat_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [205]
                0.00    0.00       1/4           particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
                0.00    0.00       2/4           molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
[122]    0.0    0.00    0.00       4         input(xercesc_3_2::DOMDocument&, molsimInput const&, xsd::cxx::tree::flags) [122]
                0.00    0.00       4/48          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::tree::text_content<char>(xercesc_3_2::DOMElement const&) [101]
                0.00    0.00       4/41          xsd::cxx::ro_string<char>::size_type xsd::cxx::trim<char>(xsd::cxx::ro_string<char>&) [103]
-----------------------------------------------
                0.00    0.00       2/4           ParticleGenerator::reserve() [214]
                0.00    0.00       2/4           cuboid::_clone(xsd::cxx::tree::flags, xsd::cxx::tree::_type*) const [166]
[123]    0.0    0.00    0.00       4         cuboid::cuboid(cuboid const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [123]
                0.00    0.00       8/44          xsd::cxx::tree::_type::_type(xsd::cxx::tree::_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [102]
                0.00    0.00       8/9           xsd::cxx::tree::one<double_vector, false>::one(xsd::cxx::tree::one<double_vector, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [111]
-----------------------------------------------
                0.00    0.00       4/4           particle_data::~particle_data() [143]
[124]    0.0    0.00    0.00       4         cuboid::~cuboid() [124]
-----------------------------------------------
                0.00    0.00       2/4           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
                0.00    0.00       2/4           ParticleGenerator::ParticleGenerator(particle_data&, Thermostat*) [47]
[125]    0.0    0.00    0.00       4         std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > >::operator=(std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > > const&) [125]
-----------------------------------------------
                0.00    0.00       1/3           domain_type::domain_type(domain_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [184]
                0.00    0.00       2/3           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[126]    0.0    0.00    0.00       3         boundaries_type::boundaries_type(boundaries_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [126]
                0.00    0.00      18/18          xsd::cxx::tree::one<boundary_type, false>::one(xsd::cxx::tree::one<boundary_type, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [108]
                0.00    0.00       3/44          xsd::cxx::tree::_type::_type(xsd::cxx::tree::_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [102]
-----------------------------------------------
                0.00    0.00       1/3           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
                0.00    0.00       1/3           domain_type::~domain_type() [185]
                0.00    0.00       1/3           molsimInput::~molsimInput() [192]
[127]    0.0    0.00    0.00       3         boundaries_type::~boundaries_type() [127]
                0.00    0.00      18/18          boundary_type::~boundary_type() [107]
-----------------------------------------------
                0.00    0.00       1/3           Simulation::getNumParticles() [177]
                0.00    0.00       1/3           Thermostat::getCurrentTemp(Container&) const [49]
                0.00    0.00       1/3           Thermostat::scale(Container&) [42]
[128]    0.0    0.00    0.00       3         ParticleContainer::size() [128]
-----------------------------------------------
                0.00    0.00       1/3           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
                0.00    0.00       2/3           ParticleGenerator::ParticleGenerator(particle_data&, Thermostat*) [47]
[129]    0.0    0.00    0.00       3         ParticleContainer::ParticleContainer() [129]
-----------------------------------------------
                0.00    0.00       1/3           Simulation::getNumParticles() [177]
                0.00    0.00       1/3           Thermostat::getCurrentTemp(Container&) const [49]
                0.00    0.00       1/3           Thermostat::scale(Container&) [42]
[130]    0.0    0.00    0.00       3         LinkedCellContainer::size() [130]
-----------------------------------------------
                0.00    0.00       3/3           particle_data::particle_data(particle_data const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [195]
[131]    0.0    0.00    0.00       3         xsd::cxx::tree::sequence_common::sequence_common(xsd::cxx::tree::sequence_common const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [131]
                0.00    0.00       2/2           cuboid::_clone(xsd::cxx::tree::flags, xsd::cxx::tree::_type*) const [166]
-----------------------------------------------
                0.00    0.00       1/3           Thermostat::scale(Container&) [42]
                0.00    0.00       2/3           LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
[132]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<Thermostat::scale(Container&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::scale(Container&)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [132]
-----------------------------------------------
                0.00    0.00       1/3           LinkedCellContainer::mixParameters() [48]
                0.00    0.00       2/3           LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
[133]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}> const&, std::_Manager_operation) [133]
-----------------------------------------------
                0.00    0.00       1/3           Thermostat::getCurrentTemp(Container&) const [49]
                0.00    0.00       2/3           LinkedCellContainer::iterate(std::function<void (Particle&)>) [8]
[134]    0.0    0.00    0.00       3         std::_Function_base::_Base_manager<Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}> const&, std::_Manager_operation) [134]
-----------------------------------------------
                0.00    0.00       3/3           LinkedCellContainer::mixParameters() [48]
[135]    0.0    0.00    0.00       3         std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, std::allocator<double> >::_M_erase(std::_Rb_tree_node<double>*) [135]
-----------------------------------------------
                0.00    0.00       2/2           ParticleGenerator::reserve() [214]
[136]    0.0    0.00    0.00       2         mapCuboid(cuboid&) [136]
                0.00    0.00       4/5           double_vector::x() [114]
                0.00    0.00       4/5           double_vector::y() [115]
                0.00    0.00       4/5           double_vector::z() [116]
                0.00    0.00       2/2           cuboid::position() [162]
                0.00    0.00       2/2           cuboid::size() [157]
                0.00    0.00       2/2           integer_vector::y() [146]
                0.00    0.00       2/2           integer_vector::x() [145]
                0.00    0.00       2/2           integer_vector::z() [147]
                0.00    0.00       2/2           cuboid::distance() [161]
                0.00    0.00       2/2           cuboid::mass() [156]
                0.00    0.00       2/2           cuboid::velocity() [163]
                0.00    0.00       2/2           cuboid::epsilon() [160]
                0.00    0.00       2/2           cuboid::sigma() [159]
                0.00    0.00       2/2           Cuboid::Cuboid(std::array<double, 3ul>, std::array<int, 3ul>, double, double, std::array<double, 3ul>, double, double) [155]
-----------------------------------------------
                0.00    0.00       2/2           Simulation::Simulation(molsimInput&) [41]
[137]    0.0    0.00    0.00       2         molsimInput::thermostat() [137]
-----------------------------------------------
                0.00    0.00       2/2           Simulation::Simulation(molsimInput&) [41]
[138]    0.0    0.00    0.00       2         molsimInput::particle_data() [138]
-----------------------------------------------
                0.00    0.00       2/2           Simulation::start(bool) [2]
[139]    0.0    0.00    0.00       2         molsimInput::frequency_output() [139]
-----------------------------------------------
                0.00    0.00       2/2           ParticleGenerator::reserve() [214]
[140]    0.0    0.00    0.00       2         particle_data::cuboids() [140]
-----------------------------------------------
                0.00    0.00       2/2           ParticleGenerator::reserve() [214]
[141]    0.0    0.00    0.00       2         particle_data::spheres() [141]
-----------------------------------------------
                0.00    0.00       1/2           ParticleGenerator::reserve() [214]
                0.00    0.00       1/2           ParticleGenerator::generate() [46]
[142]    0.0    0.00    0.00       2         particle_data::particles() [142]
-----------------------------------------------
                0.00    0.00       1/2           Simulation::Simulation(molsimInput&) [41]
                0.00    0.00       1/2           molsimInput::~molsimInput() [192]
[143]    0.0    0.00    0.00       2         particle_data::~particle_data() [143]
                0.00    0.00       6/10          xsd::cxx::tree::_type::~_type() [109]
                0.00    0.00       4/4           cuboid::~cuboid() [124]
-----------------------------------------------
                0.00    0.00       2/2           ParticleGenerator::reserve() [214]
[144]    0.0    0.00    0.00       2         cuboid_cluster::cuboid() [144]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[145]    0.0    0.00    0.00       2         integer_vector::x() [145]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[146]    0.0    0.00    0.00       2         integer_vector::y() [146]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[147]    0.0    0.00    0.00       2         integer_vector::z() [147]
-----------------------------------------------
                0.00    0.00       2/2           cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [158]
[148]    0.0    0.00    0.00       2         integer_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [148]
                0.00    0.00       6/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00       6/9           domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
                0.00    0.00       6/64          xsd::cxx::xml::qualified_name<char>::~qualified_name() [100]
                0.00    0.00       6/99          mapParticleToXML(Particle&) [96]
-----------------------------------------------
                0.00    0.00       2/2           ParticleGenerator::reserve() [214]
[149]    0.0    0.00    0.00       2         sphere_cluster::sphere() [149]
-----------------------------------------------
                0.00    0.00       1/2           ParticleGenerator::reserve() [214]
                0.00    0.00       1/2           ParticleGenerator::generate() [46]
[150]    0.0    0.00    0.00       2         particle_cluster::particle() [150]
-----------------------------------------------
                0.00    0.00       1/2           Simulation::Simulation(molsimInput&) [41]
                0.00    0.00       1/2           ParticleGenerator::ParticleGenerator(particle_data&, Thermostat*) [47]
[151]    0.0    0.00    0.00       2         ParticleContainer::~ParticleContainer() [151]
-----------------------------------------------
                0.00    0.00       2/2           Simulation::Simulation(molsimInput&) [41]
[152]    0.0    0.00    0.00       2         ParticleGenerator::getParticles() [152]
-----------------------------------------------
                0.00    0.00       2/2           ParticleGenerator::reserve() [214]
[153]    0.0    0.00    0.00       2         Cuboid::getNrParticles() [153]
-----------------------------------------------
                0.00    0.00       2/2           ParticleGenerator::generate() [46]
[154]    0.0    0.00    0.00       2         Cuboid::generate(ParticleContainer&) [154]
                0.00    0.00   10000/10001       Particle::Particle(std::array<double, 3ul>, std::array<double, 3ul>, double, double, double) [71]
                0.00    0.00   10000/10000       ParticleContainer::push(Particle&) [73]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[155]    0.0    0.00    0.00       2         Cuboid::Cuboid(std::array<double, 3ul>, std::array<int, 3ul>, double, double, std::array<double, 3ul>, double, double) [155]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[156]    0.0    0.00    0.00       2         cuboid::mass() [156]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[157]    0.0    0.00    0.00       2         cuboid::size() [157]
-----------------------------------------------
                0.00    0.00       2/2           cuboid::cuboid(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [164]
[158]    0.0    0.00    0.00       2         cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [158]
                0.00    0.00      16/99          mapParticleToXML(Particle&) [96]
                0.00    0.00      14/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00      14/64          xsd::cxx::xml::qualified_name<char>::~qualified_name() [100]
                0.00    0.00       8/29          xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [104]
                0.00    0.00       4/5           xsd::cxx::tree::traits<double_vector, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [120]
                0.00    0.00       4/5           xsd::cxx::tree::one<double_vector, false>::set(std::unique_ptr<double_vector, std::default_delete<double_vector> >) [118]
                0.00    0.00       2/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       2/2           integer_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [148]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[159]    0.0    0.00    0.00       2         cuboid::sigma() [159]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[160]    0.0    0.00    0.00       2         cuboid::epsilon() [160]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[161]    0.0    0.00    0.00       2         cuboid::distance() [161]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[162]    0.0    0.00    0.00       2         cuboid::position() [162]
-----------------------------------------------
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
[163]    0.0    0.00    0.00       2         cuboid::velocity() [163]
-----------------------------------------------
                0.00    0.00       2/2           cuboid_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [197]
[164]    0.0    0.00    0.00       2         cuboid::cuboid(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [164]
                0.00    0.00       2/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       2/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       2/2           cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [158]
-----------------------------------------------
                0.00    0.00       2/2           ParticleGenerator::reserve() [214]
[165]    0.0    0.00    0.00       2         cuboid::~cuboid() [165]
                0.00    0.00       4/6           double_vector::~double_vector() [112]
                0.00    0.00       2/10          xsd::cxx::tree::_type::~_type() [109]
-----------------------------------------------
                0.00    0.00       2/2           xsd::cxx::tree::sequence_common::sequence_common(xsd::cxx::tree::sequence_common const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [131]
[166]    0.0    0.00    0.00       2         cuboid::_clone(xsd::cxx::tree::flags, xsd::cxx::tree::_type*) const [166]
                0.00    0.00       2/4           cuboid::cuboid(cuboid const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [123]
-----------------------------------------------
                0.00    0.00       1/2           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
                0.00    0.00       1/2           ParticleGenerator::ParticleGenerator(particle_data&, Thermostat*) [47]
[167]    0.0    0.00    0.00       2         std::vector<Particle, std::allocator<Particle> >::operator=(std::vector<Particle, std::allocator<Particle> > const&) [167]
                0.00    0.00   10000/20000       Particle::Particle(Particle const&) [66]
-----------------------------------------------
                0.00    0.00       2/2           cuboid_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [197]
[168]    0.0    0.00    0.00       2         void std::vector<xsd::cxx::tree::sequence_common::ptr, std::allocator<xsd::cxx::tree::sequence_common::ptr> >::_M_realloc_insert<xsd::cxx::tree::sequence_common::ptr>(__gnu_cxx::__normal_iterator<xsd::cxx::tree::sequence_common::ptr*, std::vector<xsd::cxx::tree::sequence_common::ptr, std::allocator<xsd::cxx::tree::sequence_common::ptr> > >, xsd::cxx::tree::sequence_common::ptr&&) [168]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [973]
[169]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN12outputWriter9VTKWriterC2Ev [169]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [973]
[170]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN15DataArrayList_tC2Ev [170]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [973]
[171]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN8ParticleC2ERKS_ [171]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [973]
[172]    0.0    0.00    0.00       1         _GLOBAL__sub_I_ptStartTime [172]
-----------------------------------------------
                0.00    0.00       1/1           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[173]    0.0    0.00    0.00       1         mapDoubleVec(double_vector&) [173]
                0.00    0.00       1/5           double_vector::x() [114]
                0.00    0.00       1/5           double_vector::y() [115]
                0.00    0.00       1/5           double_vector::z() [116]
-----------------------------------------------
                0.00    0.00       1/1           xmlRoutine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) [1]
[174]    0.0    0.00    0.00       1         endPT(int, int) [174]
-----------------------------------------------
                0.00    0.00       1/1           xmlRoutine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) [1]
[175]    0.0    0.00    0.00       1         input(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&) [175]
                0.00    0.00       1/1           std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> > xsd::cxx::xml::dom::parse<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xercesc_3_2::DOMErrorHandler&, xsd::cxx::xml::properties<char> const&, unsigned long) [216]
                0.00    0.00       1/1           input(std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> >, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&) [176]
-----------------------------------------------
                0.00    0.00       1/1           input(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&) [175]
[176]    0.0    0.00    0.00       1         input(std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> >, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&) [176]
                0.00    0.00       1/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00       1/1           molsimInput::molsimInput(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [190]
-----------------------------------------------
                0.00    0.00       1/1           xmlRoutine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) [1]
[177]    0.0    0.00    0.00       1         Simulation::getNumParticles() [177]
                0.00    0.00       1/3           ParticleContainer::size() [128]
                0.00    0.00       1/3           LinkedCellContainer::size() [130]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[178]    0.0    0.00    0.00       1         Thermostat::Thermostat(thermostat_type, bool) [178]
                0.00    0.00       1/1           thermostat_type::change_brownian() [204]
                0.00    0.00       1/1           thermostat_type::steps() [206]
                0.00    0.00       1/1           thermostat_type::t_init() [207]
                0.00    0.00       1/1           thermostat_type::t_target() [208]
                0.00    0.00       1/1           thermostat_type::temp_delta() [203]
-----------------------------------------------
                0.00    0.00       1/1           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[179]    0.0    0.00    0.00       1         domain_type::domain_size() [179]
-----------------------------------------------
                0.00    0.00       1/1           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[180]    0.0    0.00    0.00       1         domain_type::cutoff_radius() [180]
-----------------------------------------------
                0.00    0.00       1/1           domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
[181]    0.0    0.00    0.00       1         domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [181]
                0.00    0.00       4/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00       4/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       4/64          xsd::cxx::xml::qualified_name<char>::~qualified_name() [100]
                0.00    0.00       2/29          xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [104]
                0.00    0.00       1/1           boundaries_type::boundaries_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [202]
                0.00    0.00       1/5           xsd::cxx::tree::traits<double_vector, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [120]
                0.00    0.00       1/5           xsd::cxx::tree::one<double_vector, false>::set(std::unique_ptr<double_vector, std::default_delete<double_vector> >) [118]
-----------------------------------------------
                0.00    0.00       1/1           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[182]    0.0    0.00    0.00       1         domain_type::gravity() [182]
-----------------------------------------------
                0.00    0.00       1/1           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[183]    0.0    0.00    0.00       1         domain_type::boundary() [183]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[184]    0.0    0.00    0.00       1         domain_type::domain_type(domain_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [184]
                0.00    0.00       1/44          xsd::cxx::tree::_type::_type(xsd::cxx::tree::_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [102]
                0.00    0.00       1/9           xsd::cxx::tree::one<double_vector, false>::one(xsd::cxx::tree::one<double_vector, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [111]
                0.00    0.00       1/3           boundaries_type::boundaries_type(boundaries_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [126]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[185]    0.0    0.00    0.00       1         domain_type::~domain_type() [185]
                0.00    0.00       1/3           boundaries_type::~boundaries_type() [127]
                0.00    0.00       1/6           double_vector::~double_vector() [112]
-----------------------------------------------
                0.00    0.00       1/1           xmlRoutine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) [1]
[186]    0.0    0.00    0.00       1         molsimInput::checkpoint() [186]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[187]    0.0    0.00    0.00       1         molsimInput::linked_cell() [187]
-----------------------------------------------
                0.00    0.00       1/1           molsimInput::molsimInput(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [190]
[188]    0.0    0.00    0.00       1         molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
                0.00    0.00      10/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       9/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00       9/64          xsd::cxx::xml::qualified_name<char>::~qualified_name() [100]
                0.00    0.00       2/9           domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
                0.00    0.00       2/29          xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [104]
                0.00    0.00       2/4           input(xercesc_3_2::DOMDocument&, molsimInput const&, xsd::cxx::tree::flags) [122]
                0.00    0.00       1/1           particle_data::particle_data(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [196]
                0.00    0.00       1/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       1/1           xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::string(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [221]
                0.00    0.00       1/1           thermostat_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [205]
                0.00    0.00       1/1           xsd::cxx::tree::one<domain_type, false>::set(std::unique_ptr<domain_type, std::default_delete<domain_type> >) [217]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[189]    0.0    0.00    0.00       1         molsimInput::domain() [189]
-----------------------------------------------
                0.00    0.00       1/1           input(std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> >, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&) [176]
[190]    0.0    0.00    0.00       1         molsimInput::molsimInput(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [190]
                0.00    0.00       1/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       1/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       1/1           molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
-----------------------------------------------
                0.00    0.00       1/1           xmlRoutine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool) [1]
[191]    0.0    0.00    0.00       1         molsimInput::~molsimInput() [191]
                0.00    0.00       1/1           molsimInput::~molsimInput() [192]
-----------------------------------------------
                0.00    0.00       1/1           molsimInput::~molsimInput() [191]
[192]    0.0    0.00    0.00       1         molsimInput::~molsimInput() [192]
                0.00    0.00       2/10          xsd::cxx::tree::_type::~_type() [109]
                0.00    0.00       1/2           particle_data::~particle_data() [143]
                0.00    0.00       1/3           boundaries_type::~boundaries_type() [127]
                0.00    0.00       1/6           double_vector::~double_vector() [112]
                0.00    0.00       1/1           xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::~string() [222]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[193]    0.0    0.00    0.00       1         particle_data::is3D() [193]
-----------------------------------------------
                0.00    0.00       1/1           particle_data::particle_data(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [196]
[194]    0.0    0.00    0.00       1         particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
                0.00    0.00       6/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       5/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00       5/64          xsd::cxx::xml::qualified_name<char>::~qualified_name() [100]
                0.00    0.00       1/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       1/29          xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [104]
                0.00    0.00       1/4           input(xercesc_3_2::DOMDocument&, molsimInput const&, xsd::cxx::tree::flags) [122]
                0.00    0.00       1/1           cuboid_cluster::cuboid_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [198]
                0.00    0.00       1/1           particle_cluster::particle_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [212]
                0.00    0.00       1/1           sphere_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [199]
                0.00    0.00       1/1           xsd::cxx::tree::one<sphere_cluster, false>::set(std::unique_ptr<sphere_cluster, std::default_delete<sphere_cluster> >) [219]
                0.00    0.00       1/1           xsd::cxx::tree::one<cuboid_cluster, false>::set(std::unique_ptr<cuboid_cluster, std::default_delete<cuboid_cluster> >) [218]
                0.00    0.00       1/1           xsd::cxx::tree::one<particle_cluster, false>::set(std::unique_ptr<particle_cluster, std::default_delete<particle_cluster> >) [220]
-----------------------------------------------
                0.00    0.00       1/1           ParticleGenerator::ParticleGenerator(particle_data&, Thermostat*) [47]
[195]    0.0    0.00    0.00       1         particle_data::particle_data(particle_data const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [195]
                0.00    0.00       4/44          xsd::cxx::tree::_type::_type(xsd::cxx::tree::_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [102]
                0.00    0.00       3/3           xsd::cxx::tree::sequence_common::sequence_common(xsd::cxx::tree::sequence_common const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [131]
-----------------------------------------------
                0.00    0.00       1/1           molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
[196]    0.0    0.00    0.00       1         particle_data::particle_data(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [196]
                0.00    0.00       1/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       1/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       1/1           particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
-----------------------------------------------
                0.00    0.00       1/1           cuboid_cluster::cuboid_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [198]
[197]    0.0    0.00    0.00       1         cuboid_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [197]
                0.00    0.00       2/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00       2/2           cuboid::cuboid(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [164]
                0.00    0.00       2/64          xsd::cxx::xml::qualified_name<char>::~qualified_name() [100]
                0.00    0.00       2/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       2/2           void std::vector<xsd::cxx::tree::sequence_common::ptr, std::allocator<xsd::cxx::tree::sequence_common::ptr> >::_M_realloc_insert<xsd::cxx::tree::sequence_common::ptr>(__gnu_cxx::__normal_iterator<xsd::cxx::tree::sequence_common::ptr*, std::vector<xsd::cxx::tree::sequence_common::ptr, std::allocator<xsd::cxx::tree::sequence_common::ptr> > >, xsd::cxx::tree::sequence_common::ptr&&) [168]
-----------------------------------------------
                0.00    0.00       1/1           particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
[198]    0.0    0.00    0.00       1         cuboid_cluster::cuboid_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [198]
                0.00    0.00       1/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       1/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       1/1           cuboid_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [197]
-----------------------------------------------
                0.00    0.00       1/1           particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
[199]    0.0    0.00    0.00       1         sphere_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [199]
-----------------------------------------------
                0.00    0.00       1/1           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[200]    0.0    0.00    0.00       1         BoundaryHandler::BoundaryHandler(boundaries_type, std::array<double, 3ul>, std::array<int, 3ul>) [200]
                0.00    0.00       1/10001       Particle::Particle(std::array<double, 3ul>, std::array<double, 3ul>, double, double, double) [71]
-----------------------------------------------
                0.00    0.00       1/1           boundaries_type::boundaries_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [202]
[201]    0.0    0.00    0.00       1         boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [201]
                0.00    0.00       6/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00       6/6           xsd::cxx::tree::one<boundary_type, false>::set(std::unique_ptr<boundary_type, std::default_delete<boundary_type> >) [113]
                0.00    0.00       6/64          xsd::cxx::xml::qualified_name<char>::~qualified_name() [100]
                0.00    0.00       6/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       5/5           xsd::cxx::tree::traits<boundary_type, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [119]
                0.00    0.00       1/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       1/48          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::tree::text_content<char>(xercesc_3_2::DOMElement const&) [101]
                0.00    0.00       1/16006       boundary_type::_xsd_boundary_type_convert() const [68]
-----------------------------------------------
                0.00    0.00       1/1           domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [181]
[202]    0.0    0.00    0.00       1         boundaries_type::boundaries_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [202]
                0.00    0.00       1/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       1/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       1/1           boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [201]
-----------------------------------------------
                0.00    0.00       1/1           Thermostat::Thermostat(thermostat_type, bool) [178]
[203]    0.0    0.00    0.00       1         thermostat_type::temp_delta() [203]
-----------------------------------------------
                0.00    0.00       1/1           Thermostat::Thermostat(thermostat_type, bool) [178]
[204]    0.0    0.00    0.00       1         thermostat_type::change_brownian() [204]
-----------------------------------------------
                0.00    0.00       1/1           molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
[205]    0.0    0.00    0.00       1         thermostat_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [205]
                0.00    0.00       3/65          xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [98]
                0.00    0.00       3/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       3/64          xsd::cxx::xml::qualified_name<char>::~qualified_name() [100]
                0.00    0.00       1/29          xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [104]
                0.00    0.00       1/4           input(xercesc_3_2::DOMDocument&, molsimInput const&, xsd::cxx::tree::flags) [122]
                0.00    0.00       1/9           domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [110]
-----------------------------------------------
                0.00    0.00       1/1           Thermostat::Thermostat(thermostat_type, bool) [178]
[206]    0.0    0.00    0.00       1         thermostat_type::steps() [206]
-----------------------------------------------
                0.00    0.00       1/1           Thermostat::Thermostat(thermostat_type, bool) [178]
[207]    0.0    0.00    0.00       1         thermostat_type::t_init() [207]
-----------------------------------------------
                0.00    0.00       1/1           Thermostat::Thermostat(thermostat_type, bool) [178]
[208]    0.0    0.00    0.00       1         thermostat_type::t_target() [208]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[209]    0.0    0.00    0.00       1         thermostat_type::thermostat_type(thermostat_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [209]
                0.00    0.00       1/44          xsd::cxx::tree::_type::_type(xsd::cxx::tree::_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [102]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[210]    0.0    0.00    0.00       1         thermostat_type::~thermostat_type() [210]
-----------------------------------------------
                0.00    0.00       1/1           particle_cluster::particle_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [212]
[211]    0.0    0.00    0.00       1         particle_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [211]
-----------------------------------------------
                0.00    0.00       1/1           particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
[212]    0.0    0.00    0.00       1         particle_cluster::particle_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [212]
                0.00    0.00       1/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       1/99          mapParticleToXML(Particle&) [96]
                0.00    0.00       1/1           particle_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [211]
-----------------------------------------------
                0.00    0.00       1/1           ParticleGenerator::reserve() [214]
[213]    0.0    0.00    0.00       1         ParticleContainer::reserve(unsigned long) [213]
-----------------------------------------------
                0.00    0.00       1/1           ParticleGenerator::generate() [46]
[214]    0.0    0.00    0.00       1         ParticleGenerator::reserve() [214]
                0.00    0.00       2/2           particle_data::cuboids() [140]
                0.00    0.00       2/2           cuboid_cluster::cuboid() [144]
                0.00    0.00       2/2           cuboid::~cuboid() [165]
                0.00    0.00       2/4           cuboid::cuboid(cuboid const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [123]
                0.00    0.00       2/2           Cuboid::getNrParticles() [153]
                0.00    0.00       2/2           mapCuboid(cuboid&) [136]
                0.00    0.00       2/2           sphere_cluster::sphere() [149]
                0.00    0.00       2/2           particle_data::spheres() [141]
                0.00    0.00       1/2           particle_cluster::particle() [150]
                0.00    0.00       1/2           particle_data::particles() [142]
                0.00    0.00       1/1           ParticleContainer::reserve(unsigned long) [213]
-----------------------------------------------
                0.00    0.00       1/1           std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> > xsd::cxx::xml::dom::parse<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xercesc_3_2::DOMErrorHandler&, xsd::cxx::xml::properties<char> const&, unsigned long) [216]
[215]    0.0    0.00    0.00       1         xsd::cxx::xml::char_utf8_transcoder<char>::from(char const*, unsigned long) [215]
-----------------------------------------------
                0.00    0.00       1/1           input(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&) [175]
[216]    0.0    0.00    0.00       1         std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> > xsd::cxx::xml::dom::parse<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xercesc_3_2::DOMErrorHandler&, xsd::cxx::xml::properties<char> const&, unsigned long) [216]
                0.00    0.00       1/1           xsd::cxx::xml::char_utf8_transcoder<char>::from(char const*, unsigned long) [215]
-----------------------------------------------
                0.00    0.00       1/1           molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
[217]    0.0    0.00    0.00       1         xsd::cxx::tree::one<domain_type, false>::set(std::unique_ptr<domain_type, std::default_delete<domain_type> >) [217]
-----------------------------------------------
                0.00    0.00       1/1           particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
[218]    0.0    0.00    0.00       1         xsd::cxx::tree::one<cuboid_cluster, false>::set(std::unique_ptr<cuboid_cluster, std::default_delete<cuboid_cluster> >) [218]
-----------------------------------------------
                0.00    0.00       1/1           particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
[219]    0.0    0.00    0.00       1         xsd::cxx::tree::one<sphere_cluster, false>::set(std::unique_ptr<sphere_cluster, std::default_delete<sphere_cluster> >) [219]
-----------------------------------------------
                0.00    0.00       1/1           particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [194]
[220]    0.0    0.00    0.00       1         xsd::cxx::tree::one<particle_cluster, false>::set(std::unique_ptr<particle_cluster, std::default_delete<particle_cluster> >) [220]
-----------------------------------------------
                0.00    0.00       1/1           molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [188]
[221]    0.0    0.00    0.00       1         xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::string(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [221]
                0.00    0.00       1/24          xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [106]
                0.00    0.00       1/48          std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::tree::text_content<char>(xercesc_3_2::DOMElement const&) [101]
-----------------------------------------------
                0.00    0.00       1/1           molsimInput::~molsimInput() [192]
[222]    0.0    0.00    0.00       1         xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::~string() [222]
-----------------------------------------------
                0.00    0.00       1/1           ParticleGenerator::applyBrownianMotion() [45]
[223]    0.0    0.00    0.00       1         Thermostat::changeBrownian() const [223]
-----------------------------------------------
                0.00    0.00       1/1           Simulation::Simulation(molsimInput&) [41]
[224]    0.0    0.00    0.00       1         std::_Function_base::_Base_manager<Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [224]
-----------------------------------------------
                0.00    0.00       1/1           Thermostat::applyBrownian(ParticleContainer&) [44]
[225]    0.0    0.00    0.00       1         std::_Function_base::_Base_manager<Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [225]
-----------------------------------------------
                0.00    0.00       1/1           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[226]    0.0    0.00    0.00       1         std::_Function_base::_Base_manager<LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}> const&, std::_Manager_operation) [226]
-----------------------------------------------
                0.00    0.00       1/1           LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [43]
[227]    0.0    0.00    0.00       1         std::vector<LinkedCell, std::allocator<LinkedCell> >::reserve(unsigned long) [227]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.


Index by function name

 [169] _GLOBAL__sub_I__ZN12outputWriter9VTKWriterC2Ev [34] BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&) [105] xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xercesc_3_2::DOMElement const*, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
 [170] _GLOBAL__sub_I__ZN15DataArrayList_tC2Ev [22] BoundaryHandler::handle(std::vector<LinkedCell, std::allocator<LinkedCell> >*) [103] xsd::cxx::ro_string<char>::size_type xsd::cxx::trim<char>(xsd::cxx::ro_string<char>&)
 [171] _GLOBAL__sub_I__ZN8ParticleC2ERKS_ [26] BoundaryHandler::period(Boundaries) [153] Cuboid::getNrParticles()
 [172] _GLOBAL__sub_I_ptStartTime [27] BoundaryHandler::reflect(Boundaries) [154] Cuboid::generate(ParticleContainer&)
 [173] mapDoubleVec(double_vector&) [200] BoundaryHandler::BoundaryHandler(boundaries_type, std::array<double, 3ul>, std::array<int, 3ul>) [155] Cuboid::Cuboid(std::array<double, 3ul>, std::array<int, 3ul>, double, double, std::array<double, 3ul>, double, double)
  [96] mapParticleToXML(Particle&) [82] boundaries_type::top() [156] cuboid::mass()
   [6] calculateLennardJones(Particle&, Particle&, double, double) [83] boundaries_type::back() [157] cuboid::size()
  [72] MaxwellBoltzmannDistribution(Particle&, double, int) [84] boundaries_type::left() [158] cuboid::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags)
 [174] endPT(int, int)        [85] boundaries_type::front() [159] cuboid::sigma()
 [175] input(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&) [201] boundaries_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [160] cuboid::epsilon()
 [122] input(xercesc_3_2::DOMDocument&, molsimInput const&, xsd::cxx::tree::flags) [86] boundaries_type::right() [161] cuboid::distance()
 [176] input(std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> >, xsd::cxx::tree::flags, xsd::cxx::tree::properties<char> const&) [87] boundaries_type::bottom() [162] cuboid::position()
 [136] mapCuboid(cuboid&)    [202] boundaries_type::boundaries_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [163] cuboid::velocity()
  [69] LinkedCell::addNeighbor(LinkedCell*) [126] boundaries_type::boundaries_type(boundaries_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [123] cuboid::cuboid(cuboid const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  [32] LinkedCell::addParticle(Particle*) [127] boundaries_type::~boundaries_type() [164] cuboid::cuboid(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*)
  [33] LinkedCell::getNeighbors() [203] thermostat_type::temp_delta() [124] cuboid::~cuboid()
  [36] LinkedCell::getParticles() [204] thermostat_type::change_brownian() [165] cuboid::~cuboid()
   [9] LinkedCell::iteratePairs(std::function<void (Particle&, Particle&)>) [205] thermostat_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [19] Particle::calculateV()
  [62] LinkedCell::removeParticles() [206] thermostat_type::steps() [20] Particle::calculateX()
  [18] LinkedCell::getIndex() [207] thermostat_type::t_init() [23] Particle::applyGravity(double)
  [90] LinkedCell::LinkedCell(int) [208] thermostat_type::t_target() [10] Particle::addF(std::array<double, 3ul> const&)
 [177] Simulation::getNumParticles() [209] thermostat_type::thermostat_type(thermostat_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [63] Particle::getF()
   [2] Simulation::start(bool) [210] thermostat_type::~thermostat_type() [64] Particle::getM()
  [41] Simulation::Simulation(molsimInput&) [211] particle_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [65] Particle::getV()
  [44] Thermostat::applyBrownian(ParticleContainer&) [150] particle_cluster::particle() [12] Particle::getX()
  [42] Thermostat::scale(Container&) [212] particle_cluster::particle_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [38] Particle::setM(double)
 [178] Thermostat::Thermostat(thermostat_type, bool) [92] ParticleContainer::getParticles() [30] Particle::isOut(std::array<double, 3ul>)
 [179] domain_type::domain_size() [73] ParticleContainer::push(Particle&) [15] Particle::getOldF()
 [180] domain_type::cutoff_radius() [128] ParticleContainer::size() [60] Particle::saveOldF()
 [181] domain_type::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [7] ParticleContainer::iterate(std::function<void (Particle&)>) [13] Particle::updateDT(double)
 [182] domain_type::gravity() [213] ParticleContainer::reserve(unsigned long) [66] Particle::Particle(Particle const&)
 [183] domain_type::boundary() [129] ParticleContainer::ParticleContainer() [71] Particle::Particle(std::array<double, 3ul>, std::array<double, 3ul>, double, double, double)
 [110] domain_type::domain_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [151] ParticleContainer::~ParticleContainer() [39] Particle::operator==(Particle&)
 [184] domain_type::domain_type(domain_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [152] ParticleGenerator::getParticles() [223] Thermostat::changeBrownian() const
 [185] domain_type::~domain_type() [45] ParticleGenerator::applyBrownianMotion() [49] Thermostat::getCurrentTemp(Container&) const
 [186] molsimInput::checkpoint() [214] ParticleGenerator::reserve() [93] Thermostat::getSteps() const
 [137] molsimInput::thermostat() [46] ParticleGenerator::generate() [68] boundary_type::_xsd_boundary_type_convert() const
 [187] molsimInput::linked_cell() [47] ParticleGenerator::ParticleGenerator(particle_data&, Thermostat*) [166] cuboid::_clone(xsd::cxx::tree::flags, xsd::cxx::tree::_type*) const
 [138] molsimInput::particle_data() [4] LinkedCellContainer::iteratePairs(std::function<void (Particle&, Particle&)>) [224] std::_Function_base::_Base_manager<Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
 [139] molsimInput::frequency_output() [48] LinkedCellContainer::mixParameters() [225] std::_Function_base::_Base_manager<Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
 [188] molsimInput::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [40] LinkedCellContainer::assignParticle(Particle&) [132] std::_Function_base::_Base_manager<Thermostat::scale(Container&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::scale(Container&)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
  [91] molsimInput::t_end()    [3] LinkedCellContainer::calculateIteration() [94] std::_Function_base::_Base_manager<BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}> const&, std::_Manager_operation)
 [189] molsimInput::domain()  [51] LinkedCellContainer::populateNeighbours() [78] std::_Function_base::_Base_manager<BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}> const&, std::_Manager_operation)
  [70] molsimInput::delta_t() [14] LinkedCellContainer::getIndexFromParticle(Particle&) [88] std::_Function_base::_Base_manager<BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
 [190] molsimInput::molsimInput(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [24] LinkedCellContainer::clearOutflowParticles() [89] std::_Function_base::_Base_manager<BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
 [191] molsimInput::~molsimInput() [130] LinkedCellContainer::size() [133] std::_Function_base::_Base_manager<LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}> const&, std::_Manager_operation)
 [192] molsimInput::~molsimInput() [8] LinkedCellContainer::iterate(std::function<void (Particle&)>) [79] std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}> const&, std::_Manager_operation)
 [107] boundary_type::~boundary_type() [43] LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&) [80] std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}> const&, std::_Manager_operation)
 [114] double_vector::x()    [100] xsd::cxx::xml::qualified_name<char>::~qualified_name() [81] std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}> const&, std::_Manager_operation)
 [115] double_vector::y()     [95] xsd::cxx::xml::char_utf8_transcoder<char>::to[abi:cxx11](char16_t const*, unsigned long) [61] std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}> const&, std::_Manager_operation)
 [116] double_vector::z()    [215] xsd::cxx::xml::char_utf8_transcoder<char>::from(char const*, unsigned long) [226] std::_Function_base::_Base_manager<LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}> const&, std::_Manager_operation)
 [117] double_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [98] xsd::cxx::xml::qualified_name<char> xsd::cxx::xml::dom::name<char>(xercesc_3_2::DOMElement const&) [134] std::_Function_base::_Base_manager<Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}> const&, std::_Manager_operation)
 [112] double_vector::~double_vector() [216] std::unique_ptr<xercesc_3_2::DOMDocument, xsd::cxx::xml::dom::deleter<xercesc_3_2::DOMDocument> > xsd::cxx::xml::dom::parse<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, xercesc_3_2::DOMErrorHandler&, xsd::cxx::xml::properties<char> const&, unsigned long) [21] std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iteratePeriodicParticles(std::vector<LinkedCell, std::allocator<LinkedCell> >*, std::function<void (Particle&, Particle&)> const&)::{lambda(LinkedCell&, std::array<int, 3ul>)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&)
 [193] particle_data::is3D()  [99] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::xml::transcode<char>(char16_t const*) [28] std::_Function_handler<void (LinkedCell&, std::array<int, 3ul>), BoundaryHandler::iterateParticlesAtBoundary(Boundaries, std::function<void (Particle&)> const&)::{lambda(LinkedCell&, auto:1)#1}>::_M_invoke(std::_Any_data const&, LinkedCell&, std::array<int, 3ul>&&)
 [194] particle_data::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [101] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > xsd::cxx::tree::text_content<char>(xercesc_3_2::DOMElement const&) [74] std::_Function_handler<void (Particle&), Simulation::Simulation(molsimInput&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
 [140] particle_data::cuboids() [131] xsd::cxx::tree::sequence_common::sequence_common(xsd::cxx::tree::sequence_common const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [75] std::_Function_handler<void (Particle&), Thermostat::applyBrownian(ParticleContainer&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
 [141] particle_data::spheres() [217] xsd::cxx::tree::one<domain_type, false>::set(std::unique_ptr<domain_type, std::default_delete<domain_type> >) [76] std::_Function_handler<void (Particle&), Thermostat::scale(Container&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
 [142] particle_data::particles() [113] xsd::cxx::tree::one<boundary_type, false>::set(std::unique_ptr<boundary_type, std::default_delete<boundary_type> >) [52] std::_Function_handler<void (Particle&), BoundaryHandler::period(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
 [195] particle_data::particle_data(particle_data const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [108] xsd::cxx::tree::one<boundary_type, false>::one(xsd::cxx::tree::one<boundary_type, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [29] std::_Function_handler<void (Particle&), BoundaryHandler::reflect(Boundaries)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
 [196] particle_data::particle_data(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [118] xsd::cxx::tree::one<double_vector, false>::set(std::unique_ptr<double_vector, std::default_delete<double_vector> >) [31] std::_Function_handler<void (Particle&), LinkedCellContainer::mixParameters()::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
 [143] particle_data::~particle_data() [111] xsd::cxx::tree::one<double_vector, false>::one(xsd::cxx::tree::one<double_vector, false> const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [11] std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#2}>::_M_invoke(std::_Any_data const&, Particle&)
  [25] ParticleSphere::toString[abi:cxx11]() [218] xsd::cxx::tree::one<cuboid_cluster, false>::set(std::unique_ptr<cuboid_cluster, std::default_delete<cuboid_cluster> >) [37] std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#4}>::_M_invoke(std::_Any_data const&, Particle&)
 [197] cuboid_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [219] xsd::cxx::tree::one<sphere_cluster, false>::set(std::unique_ptr<sphere_cluster, std::default_delete<sphere_cluster> >) [17] std::_Function_handler<void (Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
 [144] cuboid_cluster::cuboid() [220] xsd::cxx::tree::one<particle_cluster, false>::set(std::unique_ptr<particle_cluster, std::default_delete<particle_cluster> >) [50] std::_Function_handler<void (Particle&), LinkedCellContainer::LinkedCellContainer(domain_type, ParticleContainer&)::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
 [198] cuboid_cluster::cuboid_cluster(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [97] xsd::cxx::tree::_type::_container(xsd::cxx::tree::_type*) [77] std::_Function_handler<void (Particle&), Thermostat::getCurrentTemp(Container&) const::{lambda(Particle&)#1}>::_M_invoke(std::_Any_data const&, Particle&)
 [145] integer_vector::x()   [106] xsd::cxx::tree::_type::_type(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [5] std::_Function_handler<void (Particle&, Particle&), LinkedCellContainer::calculateIteration()::{lambda(Particle&, Particle&)#3}>::_M_invoke(std::_Any_data const&, Particle&, Particle&)
 [146] integer_vector::y()   [102] xsd::cxx::tree::_type::_type(xsd::cxx::tree::_type const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [227] std::vector<LinkedCell, std::allocator<LinkedCell> >::reserve(unsigned long)
 [147] integer_vector::z()   [109] xsd::cxx::tree::_type::~_type() [167] std::vector<Particle, std::allocator<Particle> >::operator=(std::vector<Particle, std::allocator<Particle> > const&)
 [148] integer_vector::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [221] xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::string(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [168] void std::vector<xsd::cxx::tree::sequence_common::ptr, std::allocator<xsd::cxx::tree::sequence_common::ptr> >::_M_realloc_insert<xsd::cxx::tree::sequence_common::ptr>(__gnu_cxx::__normal_iterator<xsd::cxx::tree::sequence_common::ptr*, std::vector<xsd::cxx::tree::sequence_common::ptr, std::allocator<xsd::cxx::tree::sequence_common::ptr> > >, xsd::cxx::tree::sequence_common::ptr&&)
 [199] sphere_cluster::parse(xsd::cxx::xml::dom::parser<char>&, xsd::cxx::tree::flags) [222] xsd::cxx::tree::string<char, xsd::cxx::tree::simple_type<char, xsd::cxx::tree::_type> >::~string() [121] std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > >::_M_get_insert_unique_pos(std::pair<double, double> const&)
 [149] sphere_cluster::sphere() [119] xsd::cxx::tree::traits<boundary_type, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [125] std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > >::operator=(std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, double>, std::_Select1st<std::pair<std::pair<double, double> const, double> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, double> > > const&)
  [35] BoundaryHandler::prepareCounter(Particle&) [120] xsd::cxx::tree::traits<double_vector, char, (xsd::cxx::tree::schema_type::value)0>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [67] std::pair<std::_Rb_tree_iterator<double>, bool> std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, std::allocator<double> >::_M_emplace_unique<double&>(double&)
  [16] BoundaryHandler::iterateCellsAtBoundary(Boundaries, std::function<void (LinkedCell&, std::array<int, 3ul>)> const&) [104] xsd::cxx::tree::traits<double, char, (xsd::cxx::tree::schema_type::value)1>::create(xercesc_3_2::DOMElement const&, xsd::cxx::tree::flags, xsd::cxx::tree::_type*) [135] std::_Rb_tree<double, double, std::_Identity<double>, std::less<double>, std::allocator<double> >::_M_erase(std::_Rb_tree_node<double>*)

